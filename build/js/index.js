!function(e){var n={};function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/Users/evanmarshall/Documents/dlive/steem-dev/build",t(t.s=95)}([function(e,n,t){var i=t(38)("wks"),r=t(19),s=t(2).Symbol,a="function"==typeof s;(e.exports=function(e){return i[e]||(i[e]=a&&s[e]||(a?s:r)("Symbol."+e))}).store=i},function(e,n){var t=e.exports={version:"2.5.3"};"number"==typeof __e&&(__e=t)},function(e,n){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(e,n,t){e.exports=!t(10)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,t){var i=t(8),r=t(87),s=t(86),a=Object.defineProperty;n.f=t(3)?Object.defineProperty:function(e,n,t){if(i(e),n=s(n,!0),i(t),r)try{return a(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var i=t(5),r=t(34);e.exports=t(3)?function(e,n,t){return i.f(e,n,r(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n){e.exports={}},function(e,n,t){var i=t(4);e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},function(e,n,t){var i=t(2),r=t(1),s=t(11),a=t(6),o=function(e,n,t){var l,u,c,d=e&o.F,f=e&o.G,p=e&o.S,g=e&o.P,h=e&o.B,m=e&o.W,v=f?r:r[n]||(r[n]={}),y=v.prototype,b=f?i:p?i[n]:(i[n]||{}).prototype;for(l in f&&(t=n),t)(u=!d&&b&&void 0!==b[l])&&l in v||(c=u?b[l]:t[l],v[l]=f&&"function"!=typeof b[l]?t[l]:h&&u?s(c,i):m&&b[l]==c?function(e){var n=function(n,t,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(n);case 2:return new e(n,t)}return new e(n,t,i)}return e.apply(this,arguments)};return n.prototype=e.prototype,n}(c):g&&"function"==typeof c?s(Function.call,c):c,g&&((v.virtual||(v.virtual={}))[l]=c,e&o.R&&y&&!y[l]&&a(y,l,c)))};o.F=1,o.G=2,o.S=4,o.P=8,o.B=16,o.W=32,o.U=64,o.R=128,e.exports=o},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){var i=t(36);e.exports=function(e,n,t){if(i(e),void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 2:return function(t,i){return e.call(n,t,i)};case 3:return function(t,i,r){return e.call(n,t,i,r)}}return function(){return e.apply(n,arguments)}}},function(e,n){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},function(e,n,t){var i=t(11),r=t(64),s=t(63),a=t(8),o=t(22),l=t(31),u={},c={};(n=e.exports=function(e,n,t,d,f){var p,g,h,m,v=f?function(){return e}:l(e),y=i(t,d,n?2:1),b=0;if("function"!=typeof v)throw TypeError(e+" is not iterable!");if(s(v)){for(p=o(e.length);p>b;b++)if((m=n?y(a(g=e[b])[0],g[1]):y(e[b]))===u||m===c)return m}else for(h=v.call(e);!(g=h.next()).done;)if((m=r(h,y,g.value,n))===u||m===c)return m}).BREAK=u,n.RETURN=c},function(e,n,t){var i=t(23),r=t(0)("toStringTag"),s="Arguments"==i(function(){return arguments}());e.exports=function(e){var n,t,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),r))?t:s?i(n):"Object"==(a=i(n))&&"function"==typeof n.callee?"Arguments":a}},function(e,n,t){"use strict";var i=t(74)(!0);t(17)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,n=this._t,t=this._i;return t>=n.length?{value:void 0,done:!0}:(e=i(n,t),this._i+=e.length,{value:e,done:!1})})},function(e,n,t){var i=t(5).f,r=t(12),s=t(0)("toStringTag");e.exports=function(e,n,t){e&&!r(e=t?e:e.prototype,s)&&i(e,s,{configurable:!0,value:n})}},function(e,n,t){"use strict";var i=t(80),r=t(9),s=t(79),a=t(6),o=t(12),l=t(7),u=t(78),c=t(16),d=t(75),f=t(0)("iterator"),p=!([].keys&&"next"in[].keys()),g=function(){return this};e.exports=function(e,n,t,h,m,v,y){u(t,n,h);var b,w,k,x=function(e){if(!p&&e in _)return _[e];switch(e){case"keys":case"values":return function(){return new t(this,e)}}return function(){return new t(this,e)}},M=n+" Iterator",j="values"==m,z=!1,_=e.prototype,S=_[f]||_["@@iterator"]||m&&_[m],T=!p&&S||x(m),E=m?j?x("entries"):T:void 0,O="Array"==n&&_.entries||S;if(O&&(k=d(O.call(new e)))!==Object.prototype&&k.next&&(c(k,M,!0),i||o(k,f)||a(k,f,g)),j&&S&&"values"!==S.name&&(z=!0,T=function(){return S.call(this)}),i&&!y||!p&&!z&&_[f]||a(_,f,T),l[n]=T,l[M]=g,m)if(b={values:j?T:x("values"),keys:v?T:x("keys"),entries:E},y)for(w in b)w in _||s(_,w,b[w]);else r(r.P+r.F*(p||z),n,b);return b}},function(e,n,t){t(82);for(var i=t(2),r=t(6),s=t(7),a=t(0)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),l=0;l<o.length;l++){var u=o[l],c=i[u],d=c&&c.prototype;d&&!d[a]&&r(d,a,u),s[u]=s.Array}},function(e,n){var t=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+i).toString(36))}},function(e,n,t){var i=t(38)("keys"),r=t(19);e.exports=function(e){return i[e]||(i[e]=r(e))}},function(e,n){var t=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:t)(e)}},function(e,n,t){var i=t(21),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},function(e,n){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e,n,t){var i=t(39),r=t(25);e.exports=function(e){return i(r(e))}},function(e,n){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n,t){var i=t(25);e.exports=function(e){return Object(i(e))}},function(e,n,t){var i=t(4);e.exports=function(e,n){if(!i(e)||e._t!==n)throw TypeError("Incompatible receiver, "+n+" required!");return e}},function(e,n,t){var i=t(19)("meta"),r=t(4),s=t(12),a=t(5).f,o=0,l=Object.isExtensible||function(){return!0},u=!t(10)(function(){return l(Object.preventExtensions({}))}),c=function(e){a(e,i,{value:{i:"O"+ ++o,w:{}}})},d=e.exports={KEY:i,NEED:!1,fastKey:function(e,n){if(!r(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,i)){if(!l(e))return"F";if(!n)return"E";c(e)}return e[i].i},getWeak:function(e,n){if(!s(e,i)){if(!l(e))return!0;if(!n)return!1;c(e)}return e[i].w},onFreeze:function(e){return u&&d.NEED&&l(e)&&!s(e,i)&&c(e),e}}},function(e,n){e.exports=function(e,n,t,i){if(!(e instanceof n)||void 0!==i&&i in e)throw TypeError(t+": incorrect invocation!");return e}},function(e,n,t){var i=t(6);e.exports=function(e,n,t){for(var r in n)t&&e[r]?e[r]=n[r]:i(e,r,n[r]);return e}},function(e,n,t){var i=t(14),r=t(0)("iterator"),s=t(7);e.exports=t(1).getIteratorMethod=function(e){if(void 0!=e)return e[r]||e["@@iterator"]||s[i(e)]}},function(e,n,t){var i=t(8),r=t(77),s=t(37),a=t(20)("IE_PROTO"),o=function(){},l=function(){var e,n=t(35)("iframe"),i=s.length;for(n.style.display="none",t(76).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;i--;)delete l.prototype[s[i]];return l()};e.exports=Object.create||function(e,n){var t;return null!==e?(o.prototype=i(e),t=new o,o.prototype=null,t[a]=e):t=l(),void 0===n?t:r(t,n)}},function(e,n){e.exports=function(e,n){return{value:n,done:!!e}}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){var i=t(4),r=t(2).document,s=i(r)&&i(r.createElement);e.exports=function(e){return s?r.createElement(e):{}}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,n,t){var i=t(2),r=i["__core-js_shared__"]||(i["__core-js_shared__"]={});e.exports=function(e){return r[e]||(r[e]={})}},function(e,n,t){var i=t(23);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},function(e,n,t){var i=t(91),r=t(37);e.exports=Object.keys||function(e){return i(e,r)}},function(e,n){e.exports=function(e){return e.toLowerCase().replace(/\n/g," ").replace(/[.,\/#!$%\^&\*;:{}=_`\"~()]/g,"").split(" ")}},function(e){e.exports={"😂":1,"❤":3,"♥":3,"😍":3,"😭":-1,"😘":3,"😊":3,"👌":2,"💕":3,"👏":2,"😁":2,"☺":3,"♡":3,"👍":2,"😩":-2,"🙏":2,"✌":2,"😏":1,"😉":2,"🙌":2,"🙈":2,"💪":2,"😄":2,"😒":-2,"💃":3,"💖":3,"😃":2,"😔":-1,"🎉":3,"😜":2,"🌸":3,"💜":3,"💙":3,"✨":1,"💗":3,"★":1,"█":-1,"☀":2,"😡":-1,"😎":2,"💋":3,"😋":3,"🙊":2,"😴":-1,"🎶":2,"💞":3,"😌":2,"🔫":-1,"💛":3,"💁":1,"💚":3,"♫":1,"😞":-1,"😆":2,"😝":2,"😪":-1,"😫":-1,"👊":1,"💀":-2,"😀":2,"😚":3,"😻":3,"💘":3,"☕":1,"👋":2,"🎊":3,"🍕":2,"❄":2,"😕":-2,"💔":-1,"😤":-2,"😈":1,"✈":2,"🔝":2,"😰":-1,"⚽":3,"😑":-2,"👑":3,"👉":1,"🍃":1,"🎁":3,"😠":-2,"🐧":2,"☆":2,"🍀":1,"🎈":3,"🎅":1,"😓":-1,"😣":-2,"😐":-2,"✊":2,"😨":-1,"😖":-1,"💤":1,"💓":3,"👎":-1,"💦":2,"✔":1,"😷":-1,"🙋":2,"🎄":2,"💩":-1,"🎵":2,"😛":3,"👯":2,"💎":2,"🌿":1,"🎂":3,"🌟":1,"🔮":1,"👫":1,"🏆":3,"✖":1,"☝":1,"😙":3,"⛄":2,"👅":2,"♪":2,"🍂":2,"💏":1,"🌴":2,"👈":2,"🌹":3,"🙆":2,"👻":1,"💰":1,"🍻":2,"🙅":-2,"🌞":2,"🍁":2,"⭐":2,"▪":1,"🎀":3,"🐷":1,"🙉":1,"🌺":2,"💅":1,"🐶":2,"🌚":2,"👽":1,"🎤":2,"👭":2,"🎧":2,"👆":1,"🍸":2,"🍷":2,"®":1,"🍉":3,"😇":3,"🏃":2,"😿":-2,"│":1,"🍺":2,"▶":1,"😲":-1,"🎸":2,"🍹":3,"💫":2,"📚":1,"😶":-1,"🌷":2,"💝":3,"💨":1,"🏈":2,"💍":2,"☔":1,"👸":3,"🇪":3,"░":-1,"🍩":1,"👾":1,"☁":1,"🌻":2,"↿":3,"🐯":2,"👼":1,"🍔":1,"😸":2,"👶":2,"↾":3,"💐":3,"🌊":2,"🍦":2,"🍓":3,"👇":1,"💆":1,"🍴":2,"😧":-1,"🇸":2,"😮":1,"🚫":-3,"😽":2,"🌈":2,"🙀":1,"⚠":-1,"🎮":2,"╯":-1,"🍆":2,"🍰":2,"✓":1,"👐":-1,"🍟":1,"🍌":2,"💑":3,"👬":-1,"🐣":2,"🎃":3,"▬":2,"￼":-3,"🐾":3,"🎓":2,"🏊":2,"📷":2,"👄":2,"🌼":4,"🚶":-1,"🐱":2,"🐸":-1,"🇺":2,"👿":-3,"🚬":2,"✿":1,"🐒":2,"🌍":3,"┊":5,"🐥":3,"🐼":1,"🎥":1,"💄":2,"⛔":2,"🏀":1,"💉":1,"💟":3,"🚗":1,"📝":1,"♦":2,"💭":1,"🌙":3,"🐟":3,"👣":1,"✂":-3,"🗿":2,"👪":-1,"🍭":1,"🌃":2,"❌":1,"🐰":3,"💊":2,"🚨":3,"😦":-2,"🍪":1,"🍣":-2,"✧":1,"🎆":3,"🎎":4,"🇩":3,"✅":2,"📱":1,"🙍":-2,"🍑":1,"🎼":1,"🔊":2,"🌌":2,"🍎":1,"🐻":2,"╰":-1,"💇":1,"♬":1,"🔴":2,"🍱":-2,"🍊":2,"🍒":1,"🐭":3,"👟":2,"🌎":1,"🍍":2,"🐮":3,"📲":1,"☼":1,"🌅":1,"🇷":3,"👠":1,"🌽":2,"💧":-1,"🍬":1,"😺":2,"🚀":2,"¦":3,"💢":1,"🎬":1,"🍧":1,"🍜":2,"🐏":3,"🏄":2,"➤":1,"⬆":1,"🍋":1,"🆗":2,"⚪":2,"📺":2,"🍅":1,"⛅":2,"🐢":1,"👙":2,"🏡":2,"🌾":2,"◉":1,"✏":1,"🐬":2,"🇹":3,"♣":1,"🐝":1,"🌝":1,"🇮":3,"🔋":-3,"🐍":1,"♔":2,"🔵":1,"😾":-2,"🌕":3,"🐨":2,"🔐":1,"💿":3,"🌳":2,"👰":2,"❀":2,"⚓":3,"🚴":3,"▀":-1,"👗":1,"➕":2,"💬":2,"▒":-1,"🔜":1,"🍨":1,"💲":1,"🍙":1,"🍥":-4,"▸":1,"♛":1,"😼":1,"🐙":2,"👨":2,"🍚":2,"♨":4,"🎹":1,"♕":2,"▃":5,"🇬":1,"🇧":1,"☠":-1,"🐠":2,"🚹":3,"💵":2,"✰":4,"╠":1,"👛":2,"🌱":3,"💻":1,"🌏":1,"▄":-1,"👓":1,"◄":1,"⚾":-1,"🌲":2,"👴":1,"🏠":2,"🍇":1,"🍘":2,"🐇":1,"🔞":-1,"👵":2,"◀":1,"🔙":1,"🌵":1,"🍮":-1,"🎇":3,"🐎":2,"➔":-1,"🐤":2,"╩":1,"🌑":2,"🚲":2,"🐑":-1,"🏁":2,"🎾":3,"╚":1,"🈹":1,"👮":-2,"☹":-3,"🐵":2,"✪":1,"◕":2,"🗼":3,"▐":-1,"♠":1,"┳":-2,"👺":-2,"🐚":1,"👂":-1,"🗽":1,"🍵":2,"🆒":2,"🐺":1,"⇨":2,"🌓":3,"🔒":1,"╬":-1,"👳":3,"🌂":1,"🚌":1,"♩":3,"🍡":-1,"❥":1,"🎡":1,"💌":2,"🐩":2,"🌜":2,"⌚":1,"🚿":3,"🔆":3,"🌛":3,"💂":-1,"🐔":1,"🙎":-1,"🏩":2,"🇫":2,"🔨":-1,"📢":2,"🐦":2,"🐲":-1,"♻":2,"🌘":3,"🌔":3,"👖":2,"😗":3,"🐄":1,"◟":-1,"🍢":-1,"🎨":1,"⬇":2,"🚼":3,"🇴":2,"🌗":3,"🌖":3,"🔅":5,"👜":1,"🐌":3,"💼":3,"🐹":1,"🌠":3,"🐈":1,"🌁":1,"⚫":1,"♧":2,"🏰":1,"🚵":2,"🎢":2,"🎷":3,"🎐":1,"┈":-4,"╗":2,"🌇":3,"⏰":2,"🚂":1,"◠":2,"🎿":2,"🆔":4,"🌒":3,"🐪":3,"╔":1,"╝":2,"👔":2,"🆓":1,"🐋":1,"▽":2,"🐛":1,"👕":2,"💳":2,"🏧":5,"💡":3,"⬅":2,"🐫":2,"🇱":2,"📹":2,"👞":2,"👚":3,"□":-2,"🚣":3,"🏉":3,"🗻":3,"╦":2,"⛺":3,"🐕":1,"🏂":2,"👡":2,"📻":2,"✒":1,"🌰":3,"🏢":1,"🎒":3,"⌒":3,"🏫":-2,"📴":4,"🚢":1,"🚚":-1,"🐉":1,"❒":1,"🔔":5,"◢":4,"🏥":1,"🚖":-1,"▌":-2,"☛":2,"💒":3,"🚤":2,"🐐":2,"■":-2,"🔚":2,"🎻":2,"🔷":1,"🎽":2,"📅":1,"🎺":3,"🍈":-3,"✉":1,"◤":5,"○":3,"🍼":3,"🚛":-2,"📓":1,"☉":1,"💴":-2,"➰":-1,"🔌":-1,"📕":1,"📣":2,"🚓":1,"🐗":3,"⛳":4,"┻":-3,"┛":3,"┃":2,"💺":1,"🏇":-1,"☻":1,"📞":2,"Ⓐ":-1,"🌉":3,"🚩":-2,"✎":3,"📃":2,"🏨":1,"📌":-3,"♎":-1,"💷":2,"🚄":3,"▲":3,"⛵":3,"🔸":1,"🚜":5,"🐆":2,"👒":1,"❕":1,"🔛":2,"♢":2,"🇲":2,"❅":4,"👝":2,"✞":2,"◡":1,"🎋":3,"👥":1,"🐡":1,"◆":4,"🔭":2,"🎪":1,"🐜":3,"♌":4,"☐":-5,"👷":1,"🔈":1,"📄":5,"🚐":4,"🌋":3,"📡":1,"🚳":5,"✘":4,"🅰":1,"🇼":2,"┓":3,"┣":3,"Ⓛ":2,"Ⓔ":2,"👤":4,"🚁":1,"🎠":3,"🐁":-2,"📗":1,"┐":-1,"♂":1,"📯":-1,"🔩":1,"👢":4,"◂":2,"📰":1,"📶":2,"🌄":1,"🗾":2,"🔶":2,"🏤":2,"🎩":2,"Ⓜ":1,"🔧":-4,"🐅":1,"♮":1,"🅾":-1,"📦":1,"🚊":1,"🔲":3,"△":1,"📆":5,"❛":2,"📉":2,"▵":2,"🔎":3,"☜":1,"🇯":2,"🇵":2,"📘":1,"ⓔ":3,"🔑":1,"⭕":2,"🔘":1,"🚭":5,"🚉":3,"🚪":3,"➳":2,"🚃":3,"┯":-3,"🆙":2,"🆖":1,"┗":5,"Ⓞ":2,"❇":3,"✴":3,"☊":5,"🔕":-2,"⬛":-2,"🚞":3,"🍶":3,"🌐":3,"♀":1,"🚅":3,"🚒":-2,"♋":1,"♍":3,"🕝":-2,"ⓐ":5,"📙":1,"Ⓢ":1,"📋":3,"🎱":1,"🐞":1,"🔺":1,"ⓡ":5,"♤":3,"🎯":3,"🔉":3,"↩":5,"🚾":1,"🎣":-4,"🔣":1,"❎":-5,"➥":1,"🎌":5,"◣":1,"⏬":5,"♭":1,"ⓞ":5,"🔳":2,"🏭":2,"🎳":-3,"☚":5,"➽":2,"➫":2,"➖":-5,"꒰":2,"꒱":2,"◝":-3,"📑":5,"ⓧ":5,"🔟":5,"〓":5,"ⓜ":2,"➠":5,"🚆":2,"℅":-5,"☃":2,"🚽":5,"ⓝ":5,"⇦":5,"👲":2,"🚡":-3,"🔬":5,"➗":-3,"📈":2,"⏪":2,"◎":5,"꒦":-5,"📎":5,"⑅":5,"✭":5,"♓":2,"┏":5,"☇":5,"࿎":-5,"👘":5,"↙":5,"Ⓕ":2,"Ⓦ":2,"Ⓟ":2,"🕑":2,"🕛":5,"♈":-5,"↬":5,"✍":5,"🏦":5,"🔻":5,"ⓟ":5,"ⓕ":5,"ⓘ":5,"♿":5,"⇗":5,"⇘":5,"ⓨ":5,"ⓙ":5,"▫":5,"🔇":5,"⌃":-5,"🔖":5,"📜":5,"🚝":5,"┘":-5,"✝":-5,"⍣":-5,"📮":-5,"🕕":-5,"🔯":5,"➸":5,"꒵":5,"🕥":-5,"✽":5,"📼":5,"🕐":-5,"🀄":5,"✬":5,"✫":5,"🕔":-5,"❣":5,"📫":5,"🉐":5,"🈂":-5,"🎰":-5,"҂":-5,"╤":-5,"📔":5,abandon:-2,abandoned:-2,abandons:-2,abducted:-2,abduction:-2,abductions:-2,abhor:-3,abhorred:-3,abhorrent:-3,abhors:-3,abilities:2,ability:2,aboard:1,aborted:-1,aborts:-1,absentee:-1,absentees:-1,absolve:2,absolved:2,absolves:2,absolving:2,absorbed:1,abuse:-3,abused:-3,abuses:-3,abusing:-3,abusive:-3,accept:1,acceptable:1,acceptance:1,accepted:1,accepting:1,accepts:1,accessible:1,accident:-2,accidental:-2,accidentally:-2,accidents:-2,acclaim:2,acclaimed:2,accolade:2,accomplish:2,accomplished:2,accomplishes:2,accomplishment:2,accomplishments:2,accusation:-2,accusations:-2,accuse:-2,accused:-2,accuses:-2,accusing:-2,ache:-2,achievable:1,aching:-2,acquit:2,acquits:2,acquitted:2,acquitting:2,acrimonious:-3,active:1,adequate:1,admire:3,admired:3,admires:3,admiring:3,admit:-1,admits:-1,admitted:-1,admonish:-2,admonished:-2,adopt:1,adopts:1,adorable:3,adoration:3,adore:3,adored:3,adores:3,adoring:3,adoringly:3,advanced:1,advantage:2,advantageous:2,advantageously:2,advantages:2,adventure:2,adventures:2,adventurous:2,adversary:-1,advisable:1,affected:-1,affection:3,affectionate:3,affectionateness:3,afflicted:-1,affordable:2,affronted:-1,aficionados:2,afraid:-2,aggravate:-2,aggravated:-2,aggravates:-2,aggravating:-2,aggression:-2,aggressions:-2,aggressive:-2,aggressiveness:-2,aghast:-2,agog:2,agonise:-3,agonised:-3,agonises:-3,agonising:-3,agonize:-3,agonized:-3,agonizes:-3,agonizing:-3,agree:1,agreeable:2,agreed:1,agreement:1,agrees:1,alarm:-2,alarmed:-2,alarmist:-2,alarmists:-2,alas:-1,alert:-1,alienation:-2,alive:1,allegation:-2,allegations:-2,allergic:-2,allow:1,ally:2,alone:-2,altruistic:2,amaze:2,amazed:2,amazes:2,amazing:4,ambitious:2,ambivalent:-1,amicable:2,amuse:3,amused:3,amusement:3,amusements:3,anger:-3,angered:-3,angers:-3,angry:-3,anguish:-3,anguished:-3,animosity:-2,annoy:-2,annoyance:-2,annoyed:-2,annoying:-2,annoys:-2,antagonistic:-2,anti:-1,anticipation:1,anxiety:-2,anxious:-2,apathetic:-3,apathy:-3,apeshit:-3,apocalyptic:-2,apologise:-1,apologised:-1,apologises:-1,apologising:-1,apologize:-1,apologized:-1,apologizes:-1,apologizing:-1,apology:-1,appalled:-2,appalling:-2,appealing:2,appease:2,appeased:2,appeases:2,appeasing:2,applaud:2,applauded:2,applauding:2,applauds:2,applause:2,appreciate:2,appreciated:2,appreciates:2,appreciating:2,appreciation:2,apprehensive:-2,appropriate:2,appropriately:2,approval:2,approved:2,approves:2,ardent:1,arrest:-2,arrested:-3,arrests:-2,arrogant:-2,arsehole:-4,ashame:-2,ashamed:-2,ass:-4,assassination:-3,assassinations:-3,assault:-2,assaults:-2,asset:2,assets:2,assfucking:-4,asshole:-4,astonished:2,astound:3,astounded:3,astounding:3,astoundingly:3,astounds:3,atrocious:-3,atrocity:-3,attack:-1,attacked:-1,attacking:-1,attacks:-1,attract:1,attracted:1,attracting:2,attraction:2,attractions:2,attractive:2,attractively:2,attractiveness:2,attracts:1,audacious:3,aura:1,authority:1,avenge:-2,avenged:-2,avenger:-2,avengers:-2,avenges:-2,avenging:-2,avert:-1,averted:-1,averts:-1,avid:2,avoid:-1,avoided:-1,avoids:-1,await:-1,awaited:-1,awaits:-1,award:3,awarded:3,awards:3,awesome:4,awful:-3,awkward:-2,axe:-1,axed:-1,backed:1,backing:2,backs:1,bad:-3,"bad luck":-2,badass:-3,badly:-3,badness:-3,bailout:-2,balanced:1,bamboozle:-2,bamboozled:-2,bamboozles:-2,ban:-2,banish:-1,bankrupt:-3,bankruptcy:-3,bankster:-3,banned:-2,barbarian:-2,barbaric:-2,barbarous:-2,bargain:2,barrier:-2,bastard:-5,bastards:-5,battle:-1,battled:-1,battles:-1,battling:-2,beaten:-2,beatific:3,beating:-1,beauties:3,beautiful:3,beautifully:3,beautify:3,beauty:3,befit:2,befitting:2,belittle:-2,belittled:-2,beloved:3,benefactor:2,benefactors:2,benefit:2,benefits:2,benefitted:2,benefitting:2,benevolent:3,bereave:-2,bereaved:-2,bereaves:-2,bereaving:-2,best:3,"best damn":4,betray:-3,betrayal:-3,betrayed:-3,betraying:-3,betrays:-3,better:2,bias:-1,biased:-2,big:1,bitch:-5,bitches:-5,bitter:-2,bitterest:-2,bitterly:-2,bizarre:-2,blackmail:-3,blackmailed:-3,blackmailing:-3,blackmails:-3,blah:-2,blame:-2,blamed:-2,blames:-2,blaming:-2,bless:2,blesses:2,blessing:3,blessings:3,blind:-1,bliss:3,blissful:3,blithe:2,bloated:-1,block:-1,blockade:-2,blockbuster:3,blocked:-1,blocking:-1,blocks:-1,bloody:-3,blurry:-2,boastful:-2,bold:2,boldly:2,bomb:-1,boost:1,boosted:1,boosting:1,boosts:1,bore:-2,bored:-2,boring:-3,bother:-2,bothered:-2,bothers:-2,bothersome:-2,boycott:-2,boycotted:-2,boycotting:-2,boycotts:-2,brainwashing:-3,brave:2,braveness:2,bravery:2,bravura:3,breach:-2,breached:-2,breaches:-2,breaching:-2,breakthrough:3,breathtaking:5,bribe:-3,bribed:-3,bribes:-3,bribing:-3,bright:1,brightest:2,brightness:1,brilliant:4,brilliance:3,brilliances:3,brisk:2,broke:-1,broken:-1,brooding:-2,brutal:-3,brutally:-3,bullied:-2,bullshit:-4,bully:-2,bullying:-2,bummer:-2,buoyant:2,burden:-2,burdened:-2,burdening:-2,burdens:-2,burglar:-2,burglary:-2,calm:2,calmed:2,calming:2,calms:2,"can't stand":-3,cancel:-1,cancelled:-1,cancelling:-1,cancels:-1,cancer:-1,capabilities:1,capability:1,capable:1,captivated:3,care:2,carefree:1,careful:2,carefully:2,carefulness:2,careless:-2,cares:2,caring:2,"cashing in":-2,casualty:-2,catastrophe:-3,catastrophic:-4,cautious:-1,celebrate:3,celebrated:3,celebrates:3,celebrating:3,celebration:3,celebrations:3,censor:-2,censored:-2,censors:-2,certain:1,chagrin:-2,chagrined:-2,challenge:-1,champion:2,championed:2,champions:2,chance:2,chances:2,chaos:-2,chaotic:-2,charged:-3,charges:-2,charisma:2,charitable:2,charm:3,charming:3,charmingly:3,charmless:-3,chastise:-3,chastised:-3,chastises:-3,chastising:-3,cheat:-3,cheated:-3,cheater:-3,cheaters:-3,cheating:-3,cheats:-3,cheer:2,cheered:2,cheerful:2,cheerfully:2,cheering:2,cheerless:-2,cheers:2,cheery:3,cherish:2,cherished:2,cherishes:2,cherishing:2,chic:2,chide:-3,chided:-3,chides:-3,chiding:-3,childish:-2,chilling:-1,choke:-2,choked:-2,chokes:-2,choking:-2,clarifies:2,clarity:2,clash:-2,classy:3,clean:2,cleaner:2,clear:1,cleared:1,clearly:1,clears:1,clever:2,clouded:-1,clueless:-2,cock:-5,cocksucker:-5,cocksuckers:-5,cocky:-2,coerced:-2,coercion:-2,collapse:-2,collapsed:-2,collapses:-2,collapsing:-2,collide:-1,collides:-1,colliding:-1,collision:-2,collisions:-2,colluding:-3,combat:-1,combats:-1,comedy:1,comfort:2,comfortable:2,comfortably:2,comforting:2,comforts:2,comic:1,commend:2,commended:2,commit:1,commitment:2,commits:1,committed:1,committing:1,compassion:2,compassionate:2,compelled:1,competencies:1,competent:2,competitive:2,complacent:-2,complain:-2,complained:-2,complaining:-2,complains:-2,complaint:-2,complaints:-2,complicating:-2,compliment:2,complimented:2,compliments:2,comprehensive:2,concerned:-2,conciliate:2,conciliated:2,conciliates:2,conciliating:2,condemn:-2,condemnation:-2,condemned:-2,condemns:-2,confidence:2,confident:2,confidently:2,conflict:-2,conflicting:-2,conflictive:-2,conflicts:-2,confuse:-2,confused:-2,confusing:-2,congrats:2,congratulate:2,congratulation:2,congratulations:2,consent:2,consents:2,consolable:2,conspiracy:-3,constipation:-2,constrained:-2,contagion:-2,contagions:-2,contagious:-1,contaminant:-2,contaminants:-2,contaminate:-2,contaminated:-2,contaminates:-2,contaminating:-2,contamination:-2,contaminations:-2,contempt:-2,contemptible:-2,contemptuous:-2,contemptuously:-2,contend:-1,contender:-1,contending:-1,contentious:-2,contestable:-2,controversial:-2,controversially:-2,controversies:-2,controversy:-2,convicted:-2,convince:1,convinced:1,convinces:1,convivial:2,cool:1,"cool stuff":3,cornered:-2,corpse:-1,corrupt:-3,corrupted:-3,corrupting:-3,corruption:-3,corrupts:-3,costly:-2,courage:2,courageous:2,courageously:2,courageousness:2,courteous:2,courtesy:2,"cover-up":-3,coward:-2,cowardly:-2,coziness:2,cramp:-1,crap:-3,crappy:-3,crash:-2,crazier:-2,craziest:-2,crazy:-2,creative:2,crestfallen:-2,cried:-2,cries:-2,crime:-3,crimes:-3,criminal:-3,criminals:-3,criminate:-3,criminated:-3,criminates:-3,crisis:-3,critic:-2,criticise:-2,criticised:-2,criticises:-2,criticising:-2,criticism:-2,criticize:-2,criticized:-2,criticizes:-2,criticizing:-2,critics:-2,critique:-2,crowding:-1,crude:-1,cruel:-3,cruelty:-3,crush:-1,crushed:-2,crushes:-1,crushing:-1,cry:-1,crying:-2,cunning:2,cunt:-5,curious:1,curse:-1,cut:-1,cutback:-2,cutbacks:-2,cute:2,cuts:-1,cutting:-1,cynic:-2,cynical:-2,cynicism:-2,damage:-3,damaged:-3,damages:-3,damaging:-3,damn:-2,"damn cute":3,"damn good":4,damned:-4,damnit:-4,danger:-2,dangerous:-2,dangerously:-2,daredevil:2,daring:2,darkest:-2,darkness:-1,dauntless:2,dazzling:3,dead:-3,deadening:-2,deadlock:-2,deadly:-3,deafening:-1,dear:2,dearly:3,death:-2,deaths:-2,debonair:2,debt:-2,deceit:-3,deceitful:-3,deceive:-3,deceived:-3,deceives:-3,deceiving:-3,deception:-3,deceptive:-3,decisive:1,dedicated:2,dedication:2,defeat:-2,defeated:-2,defect:-3,defective:-3,defects:-3,defender:2,defenders:2,defenseless:-2,defer:-1,deferring:-1,defiant:-1,deficient:-2,deficiency:-2,deficiencies:-2,deficit:-2,deformed:-2,deformities:-2,deformity:-2,defraud:-3,defrauds:-3,deft:2,defunct:-2,degrade:-2,degraded:-2,degrades:-2,dehumanize:-2,dehumanized:-2,dehumanizes:-2,dehumanizing:-2,deject:-2,dejected:-2,dejecting:-2,dejects:-2,delay:-1,delayed:-1,delectable:3,delicious:3,delight:3,delighted:3,delightful:3,delightfully:3,delighting:3,delights:3,demand:-1,demanded:-1,demanding:-1,demands:-1,demonstration:-1,demoralize:-2,demoralized:-2,demoralizes:-2,demoralizing:-2,denial:-2,denials:-2,denied:-2,denier:-2,deniers:-2,denies:-2,denounce:-2,denounces:-2,dent:-2,deny:-2,denying:-2,deplore:-3,deplored:-3,deplores:-3,deploring:-3,deport:-2,deported:-2,deporting:-2,deports:-2,deportation:-2,deportations:-2,depressed:-2,depressing:-2,deprivation:-3,derail:-2,derailed:-2,derails:-2,derelict:-2,deride:-2,derided:-2,derides:-2,deriding:-2,derision:-2,desirable:2,desire:1,desired:2,desirous:2,despair:-3,despairing:-3,despairs:-3,desperate:-3,desperately:-3,despondent:-3,destroy:-3,destroyed:-3,destroying:-3,destroys:-3,destruction:-3,destructive:-3,detached:-1,detain:-2,detained:-2,detention:-2,deteriorate:-2,deteriorated:-2,deteriorates:-2,deteriorating:-2,determined:2,deterrent:-2,detract:-1,detracted:-1,detracts:-1,devastate:-2,devastated:-2,devastating:-2,devastation:-2,devastations:-2,devoted:3,devotion:2,devotional:2,diamond:1,dick:-4,dickhead:-4,die:-3,died:-3,difficult:-1,diffident:-2,dignity:2,dilemma:-1,dilligence:2,dipshit:-3,dire:-3,direful:-3,dirt:-2,dirtier:-2,dirtiest:-2,dirty:-2,disabilities:-2,disability:-2,disabling:-1,disadvantage:-2,disadvantaged:-2,disagree:-2,disagreeable:-2,disagreement:-2,disappear:-1,disappeared:-1,disappears:-1,disappoint:-2,disappointed:-2,disappointing:-2,disappointment:-2,disappointments:-2,disappoints:-2,disapproval:-2,disapprovals:-2,disapprove:-2,disapproved:-2,disapproves:-2,disapproving:-2,disaster:-2,disasters:-2,disastrous:-3,disbelieve:-2,discard:-1,discarded:-1,discarding:-1,discards:-1,discernment:2,discomfort:-2,disconsolate:-2,disconsolation:-2,discontented:-2,discord:-2,discounted:-1,discouraged:-2,discredited:-2,discriminate:-2,discriminated:-2,discriminates:-2,discriminating:-2,discriminatory:-2,disdain:-2,disease:-1,diseases:-1,disgrace:-2,disgraced:-2,disguise:-1,disguised:-1,disguises:-1,disguising:-1,disgust:-3,disgusted:-3,disgustful:-3,disgusting:-3,disheartened:-2,dishonest:-2,disillusioned:-2,disinclined:-2,disjointed:-2,dislike:-2,disliked:-2,dislikes:-2,dismal:-2,dismayed:-2,dismissed:-2,disorder:-2,disorders:-2,disorganized:-2,disoriented:-2,disparage:-2,disparaged:-2,disparages:-2,disparaging:-2,displeased:-2,displeasure:-2,disproportionate:-2,dispute:-2,disputed:-2,disputes:-2,disputing:-2,disqualified:-2,disquiet:-2,disregard:-2,disregarded:-2,disregarding:-2,disregards:-2,disrespect:-2,disrespected:-2,disrupt:-2,disrupted:-2,disrupting:-2,disruption:-2,disruptions:-2,disruptive:-2,disrupts:-2,dissatisfied:-2,distasteful:-2,distinguished:2,distort:-2,distorted:-2,distorting:-2,distorts:-2,distract:-2,distracted:-2,distraction:-2,distracts:-2,distress:-2,distressed:-2,distresses:-2,distressing:-2,distrust:-3,distrustful:-3,disturb:-2,disturbed:-2,disturbing:-2,disturbs:-2,dithering:-2,diverting:-1,dizzy:-1,dodging:-2,dodgy:-2,"does not work":-3,dolorous:-2,donate:2,donated:2,donates:2,donating:2,donation:2,"dont like":-2,doom:-2,doomed:-2,doubt:-1,doubted:-1,doubtful:-1,doubting:-1,doubts:-1,douche:-3,douchebag:-3,dour:-2,downcast:-2,downer:-2,downhearted:-2,downside:-2,drag:-1,dragged:-1,drags:-1,drained:-2,dread:-2,dreaded:-2,dreadful:-3,dreading:-2,dream:1,dreams:1,dreary:-2,droopy:-2,drop:-1,dropped:-1,drown:-2,drowned:-2,drowns:-2,drudgery:-2,drunk:-2,dubious:-2,dud:-2,dull:-2,dumb:-3,dumbass:-3,dump:-1,dumped:-2,dumps:-1,dupe:-2,duped:-2,dupery:-2,durable:2,dying:-3,dysfunction:-2,eager:2,earnest:2,ease:2,easy:1,ecstatic:4,eerie:-2,eery:-2,effective:2,effectively:2,effectiveness:2,effortlessly:2,elated:3,elation:3,elegant:2,elegantly:2,embarrass:-2,embarrassed:-2,embarrasses:-2,embarrassing:-2,embarrassment:-2,embezzlement:-3,embittered:-2,embrace:1,emergency:-2,empathetic:2,empower:2,empowerment:2,emptiness:-1,empty:-1,enchanted:2,encourage:2,encouraged:2,encouragement:2,encourages:2,encouraging:2,endorse:2,endorsed:2,endorsement:2,endorses:2,enemies:-2,enemy:-2,energetic:2,engage:1,engages:1,engrossed:1,engrossing:3,enjoy:2,enjoyable:2,enjoyed:2,enjoying:2,enjoys:2,enlighten:2,enlightened:2,enlightening:2,enlightens:2,ennui:-2,enrage:-2,enraged:-2,enrages:-2,enraging:-2,enrapture:3,enslave:-2,enslaved:-2,enslaves:-2,ensure:1,ensuring:1,enterprising:1,entertaining:2,enthral:3,enthusiastic:3,entitled:1,entrusted:2,envies:-1,envious:-2,"environment-friendly":2,envy:-1,envying:-1,erroneous:-2,error:-2,errors:-2,escape:-1,escapes:-1,escaping:-1,esteem:2,esteemed:2,ethical:2,euphoria:3,euphoric:4,evacuate:-1,evacuated:-1,evacuates:-1,evacuating:-1,evacuation:-1,evergreen:2,evergreens:2,evergreening:-3,eviction:-1,evil:-3,exacerbate:-2,exacerbated:-2,exacerbates:-2,exacerbating:-2,exaggerate:-2,exaggerated:-2,exaggerates:-2,exaggerating:-2,exasparate:-2,exasperated:-2,exasperates:-2,exasperating:-2,excellence:3,excellent:3,excite:3,excited:3,excitement:3,exciting:3,exclude:-1,excluded:-2,exclusion:-1,exclusive:2,excruciatingly:-1,excuse:-1,exempt:-1,exhausted:-2,exhilarated:3,exhilarates:3,exhilarating:3,exonerate:2,exonerated:2,exonerates:2,exonerating:2,expand:1,expands:1,expel:-2,expelled:-2,expelling:-2,expels:-2,expertly:2,exploit:-2,exploited:-2,exploiting:-2,exploits:-2,exploration:1,explorations:1,expose:-1,exposed:-1,exposes:-1,exposing:-1,exquisite:3,extend:1,extends:1,extremist:-2,extremists:-2,exuberant:4,exultant:3,exultantly:3,fabulous:4,fabulously:4,fad:-2,fag:-3,faggot:-3,faggots:-3,fail:-2,failed:-2,failing:-2,fails:-2,failure:-2,failures:-2,fainthearted:-2,fair:2,fairness:2,faith:1,faithful:3,fake:-3,faker:-3,fakes:-3,faking:-3,fallen:-2,falling:-1,false:-1,falsely:-2,falsified:-3,falsify:-3,fame:1,famine:-2,famous:2,fan:3,fantastic:4,farce:-1,fascinate:3,fascinated:3,fascinates:3,fascinating:3,fascination:3,fascist:-2,fascists:-2,fatal:-3,fatalities:-3,fatality:-3,fatigue:-2,fatigued:-2,fatigues:-2,fatiguing:-2,favor:2,favorable:2,favorably:2,favored:2,favorite:2,favorited:2,favorites:2,favors:2,favour:2,favourable:2,favourably:2,favoured:2,favourite:2,favourited:2,favourites:2,favours:2,fear:-2,fearful:-2,fearfully:-2,fearing:-2,fearless:2,fearlessness:2,fearsome:-2,"fed up":-3,feeble:-2,feeling:1,felonies:-3,felony:-3,fertile:2,fervent:2,fervid:2,festive:2,fever:-2,fiasco:-3,fidgety:-2,fight:-1,fighting:-2,fine:2,fines:-2,finest:3,fire:-2,fired:-2,firing:-2,fit:1,fitness:1,filth:-2,filthy:-2,flagship:2,flaw:-2,flawed:-3,flawless:2,flawlessly:2,flaws:-2,flees:-1,flop:-2,flops:-2,flu:-2,flustered:-2,focused:2,fond:2,fondness:2,fool:-2,foolish:-2,fools:-2,forbid:-1,forbidden:-2,forbidding:-2,forced:-1,foreclosure:-2,foreclosures:-2,forefront:1,forget:-1,forgetful:-2,forgettable:-1,forgive:1,forgiving:1,forgot:-1,forgotten:-1,fortune:2,fortunate:2,fortunately:2,foul:-3,frantic:-1,fraud:-4,frauds:-4,fraudster:-4,fraudsters:-4,fraudulence:-4,fraudulent:-4,freak:-2,free:1,freedom:2,freedoms:2,frenzy:-3,fresh:1,friend:1,friendliness:2,friendly:2,friendship:2,fright:-2,frightened:-2,frightening:-3,frikin:-2,frisky:2,frowning:-1,fruitless:-2,frustrate:-2,frustrated:-2,frustrates:-2,frustrating:-2,frustration:-2,ftw:3,fuck:-4,fucked:-4,fucker:-4,fuckers:-4,fuckface:-4,fuckhead:-4,fuckin:-4,fucking:-4,"fucking amazing":4,"fucking beautiful":4,"fucking cute":4,"fucking fantastic":4,"fucking good":4,"fucking great":4,"fucking hot":2,"fucking love":4,"fucking loves":4,"fucking perfect":4,fucktard:-4,fud:-3,fuked:-4,fuking:-4,fulfill:2,fulfilled:2,fulfillment:2,fulfills:2,fuming:-2,fun:4,funeral:-1,funerals:-1,funky:2,funnier:4,funny:4,furious:-3,futile:-2,gag:-2,gagged:-2,gain:2,gained:2,gaining:2,gains:2,gallant:3,gallantly:3,gallantry:3,"game-changing":3,garbage:-1,gem:3,generous:2,generously:2,genial:3,ghastly:-2,ghost:-1,giddy:-2,gift:2,glad:3,glamorous:3,glamourous:3,glee:3,gleeful:3,gloom:-1,gloomy:-2,glorious:2,glory:2,glum:-2,god:1,goddamn:-3,godsend:4,gold:2,good:3,goodlooking:3,goodmorning:1,goodness:3,goodwill:3,goofiness:-2,goofy:-2,grace:1,graceful:2,gracious:3,grand:3,grant:1,granted:1,granting:1,grants:1,grateful:3,gratification:2,grave:-2,gray:-1,grisly:-2,gr8:3,great:3,greater:3,greatest:3,greed:-3,greedy:-2,"green wash":-3,"green washing":-3,greenwash:-3,greenwasher:-3,greenwashers:-3,greenwashing:-3,greet:1,greeted:1,greeting:1,greetings:2,greets:1,grey:-1,grief:-2,grieved:-2,grim:-2,gripping:2,groan:-2,groaned:-2,groaning:-2,groans:-2,gross:-2,growing:1,growth:2,growths:2,gruesome:-3,guarantee:1,guilt:-3,guilty:-3,gullibility:-2,gullible:-2,gun:-1,ha:2,hacked:-1,haha:3,hahaha:3,hahahah:3,hail:2,hailed:2,hallelujah:3,handpicked:1,handsome:3,hapless:-2,haplessness:-2,happiest:3,happiness:3,happy:3,harass:-3,harassed:-3,harasses:-3,harassing:-3,harassment:-3,hard:-1,hardier:2,hardship:-2,hardy:2,harm:-2,harmed:-2,harmful:-2,harming:-2,harmony:2,harmonious:2,harmoniously:2,harms:-2,harried:-2,harsh:-2,harsher:-2,harshest:-2,harshly:-2,hate:-3,hated:-3,hater:-3,haters:-3,hates:-3,hating:-3,hatred:-3,haunt:-1,haunted:-2,haunting:1,haunts:-1,havoc:-2,hazardous:-3,headache:-2,healthy:2,heartbreaking:-3,heartbroken:-3,heartfelt:3,heartless:-2,heartwarming:3,heaven:2,heavenly:4,heavyhearted:-2,hehe:2,hell:-4,hellish:-2,help:2,helpful:2,helping:2,helpless:-2,helps:2,hero:2,heroes:2,heroic:3,hesitant:-2,hesitate:-2,hid:-1,hide:-1,hideous:-3,hides:-1,hiding:-1,highlight:2,hilarious:2,hinder:-2,hindrance:-2,hoax:-2,hollow:-1,homeless:-2,homesick:-2,homicide:-2,homicides:-2,honest:2,honor:2,honored:2,honoring:2,honour:2,honoured:2,honouring:2,hooligan:-2,hooliganism:-2,hooligans:-2,hope:2,hopeful:2,hopefully:2,hopeless:-2,hopelessness:-2,hopes:2,hoping:2,horrendous:-3,horrid:-3,horrible:-3,horrific:-3,horrified:-3,hospitalized:-2,hostile:-2,huckster:-2,hug:2,huge:1,hugs:2,humane:2,humble:1,humbug:-2,humerous:3,humiliated:-3,humiliation:-3,humor:2,humorous:2,humour:2,humourous:2,hunger:-2,hurrah:5,hurt:-2,hurting:-2,hurts:-2,hypocritical:-2,hysteria:-3,hysterical:-3,hysterics:-3,icky:-3,idiocy:-3,idiot:-3,idiotic:-3,ignorance:-2,ignorant:-2,ignore:-1,ignored:-2,ignores:-1,ill:-2,"ill-fated":-2,illegal:-3,illegally:-3,illegitimate:-3,illiteracy:-2,illness:-2,illnesses:-2,illogical:-2,imaginative:2,imbecile:-3,immobilized:-1,immortal:2,immune:1,impair:-2,impaired:-2,impairing:-2,impairment:-2,impairs:-2,impatient:-2,impeachment:-3,impeachments:-3,impede:-2,impeded:-2,impedes:-2,impeding:-2,impedingly:-2,imperfect:-2,importance:2,important:2,impose:-1,imposed:-1,imposes:-1,imposing:-1,imposter:-2,impotent:-2,impress:3,impressed:3,impresses:3,impressive:3,imprisoned:-2,imprisonment:-2,improper:-2,improperly:-2,improve:2,improved:2,improvement:2,improves:2,improving:2,inability:-2,inaction:-2,inadequate:-2,inadvertently:-2,inappropriate:-2,incapable:-2,incapacitated:-2,incapacitates:-2,incapacitating:-2,incense:-2,incensed:-2,incenses:-2,incensing:-2,incoherent:-2,incompetence:-2,incompetent:-2,incomplete:-1,incomprehensible:-2,inconsiderate:-2,inconvenience:-2,inconvenient:-2,increase:1,increased:1,indecisive:-2,indestructible:2,indicted:-2,indifference:-2,indifferent:-2,indignant:-2,indignation:-2,indoctrinate:-2,indoctrinated:-2,indoctrinates:-2,indoctrinating:-2,inediable:-2,inexorable:-3,inexcusable:-3,ineffective:-2,ineffectively:-2,ineffectual:-2,inefficiency:-2,inefficient:-2,inefficiently:-2,inept:-2,ineptitude:-2,infantile:-2,infantilized:-2,infatuated:2,infatuation:2,infect:-2,infected:-2,infecting:-2,infection:-2,infections:-2,infectious:-2,infects:-2,inferior:-2,infest:-2,infested:-2,infesting:-2,infests:-2,inflamed:-2,inflict:-2,inflicted:-2,inflicting:-2,inflicts:-2,influential:2,infract:-2,infracted:-2,infracting:-2,infracts:-2,infringement:-2,infuriate:-2,infuriated:-2,infuriates:-2,infuriating:-2,inhibit:-1,inhuman:-2,injured:-2,injuries:-2,injury:-2,injustice:-2,innovate:1,innovates:1,innovation:1,innovative:2,inoperative:-2,inquisition:-2,inquisitive:2,insane:-2,insanity:-2,insecure:-2,insensitive:-2,insensitivity:-2,insignificant:-2,insipid:-2,insolvent:-2,insomnia:-2,inspiration:2,inspirational:2,inspire:2,inspired:2,inspires:2,inspiring:3,insufficiency:-2,insufficient:-2,insufficiently:-2,insult:-2,insulted:-2,insulting:-2,insults:-2,intact:2,integrity:2,intelligent:2,intense:1,interest:1,interested:2,interesting:2,interests:1,interrogated:-2,interrupt:-2,interrupted:-2,interrupting:-2,interruption:-2,interrupts:-2,intimacy:2,intimidate:-2,intimidated:-2,intimidates:-2,intimidating:-2,intimidation:-2,intransigence:-2,intransigency:-2,intricate:2,intrigues:1,invasion:-1,invincible:2,invite:1,inviting:1,invulnerable:2,irate:-3,ironic:-1,irony:-1,irrational:-1,irreparable:-2,irreproducible:-2,irresistible:2,irresistibly:2,irresolute:-2,irresponsible:-2,irresponsibly:-2,irreversible:-1,irreversibly:-1,irritate:-3,irritated:-3,irritates:-3,irritating:-3,isolated:-1,itchy:-2,jackass:-4,jackasses:-4,jailed:-2,jaunty:2,jealous:-2,jealousy:-2,jeopardy:-2,jerk:-3,jesus:1,jewel:1,jewels:1,jocular:2,join:1,joke:2,jokes:2,jolly:2,jovial:2,joy:3,joyful:3,joyfully:3,joyless:-2,joyous:3,jubilant:3,jumpy:-1,justice:2,justifiably:2,justified:2,keen:1,kickback:-3,kickbacks:-3,kidnap:-2,kidnapped:-2,kidnapping:-2,kidnappings:-2,kidnaps:-2,kill:-3,killed:-3,killing:-3,kills:-3,kind:2,"kind of":0,kinder:2,kindness:2,kiss:2,kudos:3,lack:-2,lackadaisical:-2,lag:-1,lagged:-2,lagging:-2,lags:-2,lame:-2,landmark:2,lapse:-1,lapsed:-1,laugh:1,laughed:1,laughing:1,laughs:1,laughting:1,launched:1,lawl:3,lawsuit:-2,lawsuits:-2,lazy:-1,leadership:1,leading:2,leak:-1,leaked:-1,leave:-1,legal:1,legally:1,lenient:1,lethal:-2,lethality:-2,lethargic:-2,lethargy:-2,liar:-3,liars:-3,libelous:-2,lied:-2,lifeless:-1,lifesaver:4,lighthearted:1,likable:2,like:2,likeable:2,liked:2,likers:2,likes:2,liking:2,limitation:-1,limited:-1,limits:-1,litigation:-1,litigious:-2,lively:2,livid:-2,lmao:4,lmfao:4,loathe:-3,loathed:-3,loathes:-3,loathing:-3,loathsome:-3,lobbied:-2,lobby:-2,lobbying:-2,lobbyist:-2,lobbyists:-2,lol:3,lolol:4,lololol:4,lolololol:4,lonely:-2,lonesome:-2,longing:-1,lool:3,loom:-1,loomed:-1,looming:-1,looms:-1,loool:3,looool:3,loose:-3,looses:-3,loser:-3,losing:-3,loss:-3,losses:-3,lost:-3,lousy:-2,lovable:3,love:3,loved:3,lovelies:3,lovely:3,loves:3,loving:2,"loving-kindness":3,lowest:-1,loyal:3,loyalty:3,luck:3,luckily:3,lucky:3,lucrative:3,ludicrous:-3,lugubrious:-2,lunatic:-3,lunatics:-3,lurk:-1,lurking:-1,lurks:-1,luxury:2,macabre:-2,mad:-3,maddening:-3,"made-up":-1,madly:-3,madness:-3,magnificent:3,maladaption:-2,maldevelopment:-2,maltreatment:-2,mandatory:-1,manipulated:-1,manipulating:-1,manipulation:-1,manslaughter:-3,marvel:3,marvelous:3,marvels:3,masterpiece:4,masterpieces:4,matter:1,matters:1,mature:2,meaningful:2,meaningless:-2,medal:3,mediocrity:-3,meditative:1,melancholy:-2,memorable:1,memoriam:-2,menace:-2,menaced:-2,menaces:-2,mercy:2,merry:3,mesmerizing:3,mess:-2,messed:-2,"messing up":-2,methodical:2,methodically:2,mindless:-2,miracle:4,mirth:3,mirthful:3,mirthfully:3,misbehave:-2,misbehaved:-2,misbehaves:-2,misbehaving:-2,misbranding:-3,miscast:-2,mischief:-1,mischiefs:-1,misclassified:-2,misclassifies:-2,misclassify:-2,misconduct:-2,misconducted:-2,misconducting:-2,misconducts:-2,miserable:-3,miserably:-3,misery:-2,misfire:-2,misfortune:-2,misgiving:-2,misinformation:-2,misinformed:-2,misinterpreted:-2,mislead:-3,misleaded:-3,misleading:-3,misleads:-3,misplace:-2,misplaced:-2,misplaces:-2,misplacing:-2,mispricing:-3,misread:-1,misreport:-2,misreported:-2,misreporting:-2,misreports:-2,misrepresent:-2,misrepresentation:-2,misrepresentations:-2,misrepresented:-2,misrepresenting:-2,misrepresents:-2,miss:-2,missed:-2,missing:-2,mistake:-2,mistaken:-2,mistakes:-2,mistaking:-2,misunderstand:-2,misunderstanding:-2,misunderstands:-2,misunderstood:-2,misuse:-2,misused:-2,misuses:-2,misusing:-2,moan:-2,moaned:-2,moaning:-2,moans:-2,mock:-2,mocked:-2,mocking:-2,mocks:-2,modernize:2,modernized:2,modernizes:2,modernizing:2,mongering:-2,monopolize:-2,monopolized:-2,monopolizes:-2,monopolizing:-2,monotone:-1,moody:-1,mope:-1,moping:-1,moron:-3,motherfucker:-5,motherfucking:-5,motivate:1,motivated:2,motivating:2,motivation:1,mourn:-2,mourned:-2,mournful:-2,mourning:-2,mourns:-2,muddy:-2,mumpish:-2,murder:-2,murderer:-2,murdering:-3,murderous:-3,murders:-2,murky:-2,myth:-1,n00b:-2,naive:-2,narcissism:-2,nasty:-3,natural:1,"naïve":-2,needy:-2,negative:-2,negativity:-2,neglect:-2,neglected:-2,neglecting:-2,neglects:-2,nerves:-1,nervous:-2,nervously:-2,nice:3,nifty:2,niggas:-5,nigger:-5,no:-1,"no fun":-3,noble:2,noblest:2,noisy:-1,"non-approved":-2,nonsense:-2,noob:-2,nosey:-2,"not good":-2,"not working":-3,notable:2,noticeable:2,notorious:-2,novel:2,numb:-1,nurturing:2,nuts:-3,obliterate:-2,obliterated:-2,obnoxious:-3,obscene:-2,obscenity:-2,obsessed:2,obsolete:-2,obstacle:-2,obstacles:-2,obstinate:-2,obstruct:-2,obstructed:-2,obstructing:-2,obstruction:-2,obstructs:-2,odd:-2,offence:-2,offences:-2,offend:-2,offended:-2,offender:-2,offending:-2,offends:-2,offense:-2,offenses:-2,offensive:-2,offensively:-2,offline:-1,oks:2,ominous:3,"once-in-a-lifetime":3,oops:-2,opportunities:2,opportunity:2,oppressed:-2,oppression:-2,oppressions:-2,oppressive:-2,optimism:2,optimistic:2,optionless:-2,ostracize:-2,ostracized:-2,ostracizes:-2,ouch:-2,outage:-2,outages:-2,outbreak:-2,outbreaks:-2,outcry:-2,outmaneuvered:-2,outnumbered:-2,outrage:-3,outraged:-3,outrageous:-3,outreach:2,outstanding:5,overjoyed:4,overload:-1,overlooked:-1,overprotective:-2,overran:-2,overreact:-2,overreacted:-2,overreacting:-2,overreaction:-2,overreacts:-2,oversell:-2,overselling:-2,oversells:-2,oversight:-1,oversimplification:-2,oversimplified:-2,oversimplifies:-2,oversimplify:-2,oversold:-2,overstatement:-2,overstatements:-2,overweight:-1,overwrought:-3,oxymoron:-1,pain:-2,pained:-2,painful:-2,panic:-3,panicked:-3,panics:-3,paradise:3,paradox:-1,pardon:2,pardoned:2,pardoning:2,pardons:2,parley:-1,passion:1,passionate:2,passive:-1,passively:-1,pathetic:-2,pay:-1,peace:2,peaceful:2,peacefully:2,penalize:-2,penalized:-2,penalizes:-2,penalizing:-2,penalty:-2,pensive:-1,perfect:3,perfected:2,perfection:3,perfectly:3,perfects:2,peril:-2,perjury:-3,perpetrated:-2,perpetrator:-2,perpetrators:-2,perplexed:-2,persecute:-2,persecuted:-2,persecutes:-2,persecuting:-2,perturbed:-2,pervert:-3,pesky:-2,pessimism:-2,pessimistic:-2,petrified:-2,philanthropy:2,phobic:-2,picturesque:2,pileup:-1,pillage:-2,pique:-2,piqued:-2,piss:-4,pissed:-4,pissing:-3,piteous:-2,pitied:-1,pity:-2,plague:-3,plagued:-3,plagues:-3,plaguing:-3,playful:2,pleasant:3,please:1,pleased:3,pleasurable:3,pleasure:3,plodding:-2,poignant:2,pointless:-2,poised:-2,poison:-2,poisoned:-2,poisons:-2,polished:2,polite:2,politeness:2,pollutant:-2,pollute:-2,polluted:-2,polluter:-2,polluters:-2,pollutes:-2,pollution:-2,poor:-2,poorer:-2,poorest:-2,poorly:-2,popular:3,popularity:3,positive:2,positively:2,possessive:-2,"post-traumatic":-2,postpone:-1,postponed:-1,postpones:-1,postponing:-1,poverty:-1,powerful:2,powerless:-2,praise:3,praised:3,praises:3,praising:3,pray:1,praying:1,prays:1,prblm:-2,prblms:-2,predatory:-2,prepared:1,pressure:-1,pressured:-2,pretend:-1,pretending:-1,pretends:-1,pretty:1,prevent:-1,prevented:-1,preventing:-1,prevents:-1,prick:-5,prison:-2,prisoner:-2,prisoners:-2,privileged:2,proactive:2,problem:-2,problems:-2,profit:2,profitable:2,profiteer:-2,profits:2,progress:2,prohibit:-1,prohibits:-1,prominent:2,promise:1,promised:1,promises:1,promote:1,promoted:1,promotes:1,promoting:1,promptly:1,propaganda:-2,prosecute:-1,prosecuted:-2,prosecutes:-1,prosecution:-1,prospect:1,prospects:1,prosperity:3,prosperous:3,protect:1,protected:1,protects:1,protest:-2,protesters:-2,protesting:-2,protests:-2,proud:2,proudly:2,provoke:-1,provoked:-1,provokes:-1,provoking:-1,prudence:2,pseudoscience:-3,psychopathic:-2,punish:-2,punished:-2,punishes:-2,punishing:-2,punitive:-2,pure:1,purest:1,purposeful:2,pushy:-1,puzzled:-2,quaking:-2,qualities:2,quality:2,questionable:-2,questioned:-1,questioning:-1,racism:-3,racist:-3,racists:-3,rage:-2,rageful:-2,rainy:-1,rant:-3,ranter:-3,ranters:-3,rants:-3,rape:-4,raped:-4,rapist:-4,rapture:2,raptured:2,raptures:2,rapturous:4,rash:-2,ratified:2,reach:1,reached:1,reaches:1,reaching:1,reassure:1,reassured:1,reassures:1,reassuring:2,rebel:-2,rebellion:-2,rebels:-2,recession:-2,reckless:-2,recognition:2,recommend:2,recommended:2,recommends:2,redeemed:2,refine:1,refined:1,refines:1,refreshingly:2,refuse:-2,refused:-2,refuses:-2,refusing:-2,regret:-2,regretful:-2,regrets:-2,regretted:-2,regretting:-2,reigning:1,reject:-1,rejected:-1,rejecting:-1,rejection:-2,rejects:-1,rejoice:4,rejoiced:4,rejoices:4,rejoicing:4,relaxed:2,relentless:-1,reliability:2,reliable:2,reliably:2,reliant:2,relieve:1,relieved:2,relieves:1,relieving:2,relishing:2,remarkable:2,remorse:-2,repellent:-2,repercussion:-2,repercussions:-2,reprimand:-2,reprimanded:-2,reprimanding:-2,reprimands:-2,repulse:-1,repulsed:-2,repulsive:-2,rescue:2,rescued:2,rescues:2,resentful:-2,resign:-1,resigned:-1,resigning:-1,resigns:-1,resolute:2,resolution:2,resolve:2,resolved:2,resolves:2,resolving:2,respect:2,respected:2,respects:2,responsibility:1,responsible:2,responsive:2,restful:2,restless:-2,restore:1,restored:1,restores:1,restoring:1,restrict:-2,restricted:-2,restricting:-2,restriction:-2,restrictive:-1,restricts:-2,retained:-1,retard:-2,retarded:-2,retreat:-1,revenge:-2,revengeful:-2,revered:2,revive:2,revives:2,revolting:-2,reward:2,rewarded:2,rewarding:2,rewards:2,rich:2,richly:2,ridiculous:-3,rig:-1,rigged:-1,"right direction":3,righteousness:2,rightful:2,rightfully:2,rigorous:3,rigorously:3,riot:-2,riots:-2,rise:1,rises:1,risk:-2,risks:-2,risky:-2,riveting:3,rob:-2,robber:-2,robed:-2,robing:-2,robs:-2,robust:2,rofl:4,roflcopter:4,roflmao:4,romance:2,romantical:2,romantically:2,rose:1,rotfl:4,rotflmfao:4,rotflol:4,rotten:-3,rude:-2,ruin:-2,ruined:-2,ruining:-2,ruins:-2,sabotage:-2,sad:-2,sadden:-2,saddened:-2,sadly:-2,safe:1,safely:1,safer:2,safety:1,salient:1,salute:2,saluted:2,salutes:2,saluting:2,salvation:2,sappy:-1,sarcastic:-2,satisfied:2,savange:-2,savanges:-2,save:2,saved:2,savings:1,scam:-2,scams:-2,scandal:-3,scandalous:-3,scandals:-3,scapegoat:-2,scapegoats:-2,scare:-2,scared:-2,scar:-2,scars:-2,scary:-2,sceptical:-2,scold:-2,scoop:3,scorn:-2,scornful:-2,scream:-2,screamed:-2,screaming:-2,screams:-2,screwed:-2,"screwed up":-3,scum:-3,scumbag:-4,seamless:2,seamlessly:2,secure:2,secured:2,secures:2,sedition:-2,seditious:-2,seduced:-1,"self-abuse":-2,"self-confident":2,"self-contradictory":-2,"self-deluded":-2,selfish:-3,selfishness:-3,sentence:-2,sentenced:-2,sentences:-2,sentencing:-2,serene:2,settlement:1,settlements:1,severe:-2,severely:-2,sexist:-2,sexistic:-2,sexy:3,shaky:-2,shame:-2,shamed:-2,shameful:-2,share:1,shared:1,shares:1,shattered:-2,shit:-4,shithead:-4,shitty:-3,shock:-2,shocked:-2,shocking:-2,shocks:-2,shoody:-2,shoot:-1,"short-sighted":-2,"short-sightedness":-2,shortage:-2,shortages:-2,shrew:-4,shy:-1,sick:-2,sickness:-2,"side-effect":-2,"side-effects":-2,sigh:-2,significance:1,significant:1,silencing:-1,silly:-1,simplicity:1,sin:-2,sincere:2,sincerely:2,sincerest:2,sincerity:2,sinful:-3,singleminded:-2,sinister:-2,sins:-2,skeptic:-2,skeptical:-2,skepticism:-2,skeptics:-2,slam:-2,slash:-2,slashed:-2,slashes:-2,slashing:-2,slave:-3,slavery:-3,slaves:-3,sleeplessness:-2,slick:2,slicker:2,slickest:2,slip:-1,sloppy:-2,sluggish:-2,slumping:-1,slut:-5,smart:1,smarter:2,smartest:2,smear:-2,smile:2,smiled:2,smiles:2,smiling:2,smog:-2,smuggle:-2,smuggled:-2,smuggling:-2,smuggles:-2,sneaky:-1,sneeze:-2,sneezed:-2,sneezes:-2,sneezing:-2,snub:-2,snubbed:-2,snubbing:-2,snubs:-2,sobering:1,solemn:-1,solid:2,solidarity:2,solidified:2,solidifies:2,solidify:2,solidifying:2,solution:1,solutions:1,solve:1,solved:1,solves:1,solving:1,somber:-2,"some kind":0,"son-of-a-bitch":-5,soothe:3,soothed:3,soothing:3,sophisticated:2,sore:-1,sorrow:-2,sorrowful:-2,sorry:-1,spacious:1,spam:-2,spammer:-3,spammers:-3,spamming:-2,spark:1,sparkle:3,sparkles:3,sparkling:3,spearhead:2,speculative:-2,spirit:1,spirited:2,spiritless:-2,spiteful:-2,splendid:3,spoiled:-2,spoilt:-2,spotless:2,sprightly:2,squander:-2,squandered:-2,squandering:-2,squanders:-2,squelched:-1,stab:-2,stabbed:-2,stable:2,stabs:-2,stall:-2,stalled:-2,stalling:-2,stamina:2,stampede:-2,stank:-2,startled:-2,startling:3,starve:-2,starved:-2,starves:-2,starving:-2,steadfast:2,steal:-2,stealing:-2,steals:-2,stereotype:-2,stereotyped:-2,stifled:-1,stimulate:1,stimulated:1,stimulates:1,stimulating:2,stingy:-2,stink:-2,stinked:-2,stinker:-2,stinking:-2,stinks:-2,stinky:-2,stole:-2,stolen:-2,stop:-1,stopped:-1,stopping:-1,stops:-1,stout:2,straight:1,strange:-1,strangely:-1,strangled:-2,strength:2,strengthen:2,strengthened:2,strengthening:2,strengthens:2,strengths:2,stress:-1,stressed:-2,stressor:-2,stressors:-2,stricken:-2,strike:-1,strikers:-2,strikes:-1,strong:2,stronger:2,strongest:2,struck:-1,struggle:-2,struggled:-2,struggles:-2,struggling:-2,stubborn:-2,stuck:-2,stunned:-2,stunning:4,stupid:-2,stupidity:-3,stupidly:-2,suave:2,subpoena:-2,substantial:1,substantially:1,subversive:-2,succeed:3,succeeded:3,succeeding:3,succeeds:3,success:2,successful:3,successfully:3,suck:-3,sucks:-3,sue:-2,sued:-2,sueing:-2,sues:-2,suffer:-2,suffered:-2,sufferer:-2,sufferers:-2,suffering:-2,suffers:-2,suicidal:-2,suicide:-2,suicides:-2,suing:-2,suitable:2,suited:2,sulking:-2,sulky:-2,sullen:-2,sunshine:2,super:3,superb:5,superior:2,support:2,supported:2,supporter:1,supporters:1,supporting:1,supportive:2,supports:2,supreme:4,survived:2,surviving:2,survivor:2,suspect:-1,suspected:-1,suspecting:-1,suspects:-1,suspend:-1,suspended:-1,suspicious:-2,sustainability:1,sustainable:2,sustainably:2,swear:-2,swearing:-2,swears:-2,sweet:2,sweeter:3,sweetest:3,swift:2,swiftly:2,swindle:-3,swindles:-3,swindling:-3,sympathetic:2,sympathy:2,taint:-2,tainted:-2,talent:2,tard:-2,tarnish:-2,tarnished:-2,tarnishes:-2,tears:-2,tender:2,tenderness:2,tense:-2,tension:-1,terrible:-3,terribly:-3,terrific:4,terrifically:4,terrified:-3,terror:-3,terrorist:-2,terrorists:-2,terrorize:-3,terrorized:-3,terrorizes:-3,thank:2,thankful:2,thanks:2,thorny:-2,thoughtful:2,thoughtless:-2,threat:-2,threaten:-2,threatened:-2,threatening:-2,threatens:-2,threats:-2,thrilled:5,thwart:-2,thwarted:-2,thwarting:-2,thwarts:-2,timid:-2,timorous:-2,tired:-2,tits:-2,tolerance:2,tolerant:2,toothless:-2,top:2,tops:2,torn:-2,torture:-4,tortured:-4,tortures:-4,torturing:-4,totalitarian:-2,totalitarianism:-2,tout:-2,touted:-2,touting:-2,touts:-2,toxic:-3,tragedies:-2,tragedy:-2,tragic:-2,tranquil:2,transgress:-2,transgressed:-2,transgresses:-2,transgressing:-2,trap:-1,trapped:-2,traps:-1,trauma:-3,traumatic:-3,travesty:-2,treason:-3,treasonous:-3,treasure:2,treasures:2,trembling:-2,tremor:-2,tremors:-2,tremulous:-2,tribulation:-2,tribute:2,tricked:-2,trickery:-2,triumph:4,triumphant:4,troll:-2,trouble:-2,troubled:-2,troubles:-2,troubling:-2,true:2,trust:1,trusted:2,trusts:1,tumor:-2,twat:-5,tyran:-3,tyrannic:-3,tyrannical:-3,tyrannically:-3,tyrans:-3,ubiquitous:2,ugh:-2,ugliness:-3,ugly:-3,unable:-2,unacceptable:-2,unappeasable:-2,unappreciated:-2,unapproved:-2,unattractive:-2,unavailable:-1,unavailing:-2,unaware:-2,unbearable:-2,unbelievable:-1,unbelieving:-1,unbiased:2,uncertain:-1,unclear:-1,uncomfortable:-2,unconcerned:-2,unconfirmed:-1,unconvinced:-1,uncredited:-1,undecided:-1,undercooked:-2,underestimate:-1,underestimated:-1,underestimates:-1,underestimating:-1,undermine:-2,undermined:-2,undermines:-2,undermining:-2,underperform:-2,underperformed:-2,underperforming:-2,underperforms:-2,undeserving:-2,undesirable:-2,uneasy:-2,unemployed:-1,unemployment:-2,unequal:-1,unequaled:2,unethical:-2,uneventful:-2,unfair:-2,unfavorable:-2,unfit:-2,unfitted:-2,unfocused:-2,unforgivable:-3,unforgiving:-2,unfulfilled:-2,unfunny:-2,ungenerous:-2,ungrateful:-3,unhappy:-2,unhappiness:-2,unhealthy:-2,unhygienic:-2,unified:1,unimaginative:-2,unimpressed:-2,uninspired:-2,unintelligent:-2,unintentional:-2,uninvolving:-2,united:1,unjust:-2,unlikely:-1,unlovable:-2,unloved:-2,unmatched:1,unmotivated:-2,unoriginal:-2,unparliamentary:-2,unpleasant:-2,unpleasantness:-2,unprofessional:-2,unravel:1,unreleting:-2,unresearched:-2,unsafe:-2,unsatisfied:-2,unscientific:-2,unsecured:-2,unselfish:2,unsettled:-1,unsold:-1,unsophisticated:-2,unsound:-2,unstable:-2,unstoppable:2,unsuccessful:-2,unsuccessfully:-2,unsupported:-2,unsure:-1,untarnished:2,untrue:-2,unwanted:-2,unworthy:-2,uplifting:2,uproar:-3,upset:-2,upsets:-2,upsetting:-2,uptight:-2,urgent:-1,useful:2,usefulness:2,useless:-2,uselessness:-2,vague:-2,validate:1,validated:1,validates:1,validating:1,vapid:-2,verdict:-1,verdicts:-1,vested:1,vexation:-2,vexing:-2,vibrant:3,vicious:-2,victim:-3,victimization:-3,victimize:-3,victimized:-3,victimizes:-3,victimizing:-3,victims:-3,victor:3,victors:3,victory:3,victories:3,vigilant:3,vigor:3,vile:-3,vindicate:2,vindicated:2,vindicates:2,vindicating:2,violate:-2,violated:-2,violates:-2,violating:-2,violation:-2,violations:-2,violence:-3,"violence-related":-3,violent:-3,violently:-3,virtuous:2,virulent:-2,vision:1,visionary:3,visioning:1,visions:1,vitality:3,vitamin:1,vitriolic:-3,vivacious:3,vividly:2,vociferous:-1,vomit:-3,vomited:-3,vomiting:-3,vomits:-3,vulnerability:-2,vulnerable:-2,walkout:-2,walkouts:-2,wanker:-3,want:1,war:-2,warfare:-2,warm:1,warmhearted:2,warmness:2,warmth:2,warn:-2,warned:-2,warning:-3,warnings:-3,warns:-2,waste:-1,wasted:-2,wasting:-2,wavering:-1,weak:-2,weakened:-2,weakness:-2,weaknesses:-2,wealth:3,wealthier:2,wealthy:2,weary:-2,weep:-2,weeping:-2,weird:-2,welcome:2,welcomed:2,welcomes:2,"well-being":2,"well-championed":3,"well-developed":2,"well-established":2,"well-focused":2,"well-groomed":2,"well-proportioned":2,whimsical:1,whitewash:-3,whore:-4,wicked:-2,widowed:-1,willingness:2,win:4,winner:4,winning:4,wins:4,winwin:3,wisdom:1,wish:1,wishes:1,wishing:1,withdrawal:-3,wits:2,woebegone:-2,woeful:-3,won:3,wonderful:4,wonderfully:4,woo:3,woohoo:3,wooo:4,woow:4,worn:-1,worried:-3,worries:-3,worry:-3,worrying:-3,worse:-3,worsen:-3,worsened:-3,worsening:-3,worsens:-3,worshiped:3,worst:-3,worth:2,worthless:-2,worthy:2,wow:4,wowow:4,wowww:4,wrathful:-3,wreck:-2,wrenching:-2,wrong:-2,wrongdoing:-2,wrongdoings:-2,wronged:-2,wrongful:-2,wrongfully:-2,wrongly:-2,wtf:-4,wtff:-4,wtfff:-4,xo:3,xoxo:3,xoxoxo:4,xoxoxoxo:4,yeah:1,yearning:1,yeees:2,yes:1,youthful:2,yucky:-2,yummy:3,zealot:-2,zealots:-2,zealous:2}},function(e,n){var t,i,r=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===s||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:s}catch(e){t=s}try{i="function"==typeof clearTimeout?clearTimeout:a}catch(e){i=a}}();var l,u=[],c=!1,d=-1;function f(){c&&l&&(c=!1,l.length?u=l.concat(u):d=-1,u.length&&p())}function p(){if(!c){var e=o(f);c=!0;for(var n=u.length;n;){for(l=u,u=[];++d<n;)l&&l[d].run();d=-1,n=u.length}l=null,c=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===a||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(n){try{return i.call(null,e)}catch(n){return i.call(this,e)}}}(e)}}function g(e,n){this.fun=e,this.array=n}function h(){}r.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new g(e,n)),1!==u.length||c||o(p)},g.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,n,t){(function(n){var i=t(42),r=t(41),s={cant:1,"can't":1,dont:1,"don't":1,doesnt:1,"doesn't":1,not:1,non:1,wont:1,"won't":1,isnt:1,"isn't":1,wasnt:1,"wasn't":1};e.exports=function(e,t,a){void 0===e&&(e=""),void 0===t&&(t=null),"function"==typeof t&&(a=t),void 0===a&&(a=null),null!==t&&(i=Object.assign(i,t));for(var o=r(e),l=0,u=[],c=[],d=[],f=o.length;f--;){var p=o[f],g=i[p];if(i.hasOwnProperty(p)){if(f>0){var h=o[f-1];s[h]&&(g=-g)}u.push(p),g>0&&c.push(p),g<0&&d.push(p),l+=g}}var m={score:l,comparative:o.length>0?l/o.length:0,tokens:o,words:u,positive:c,negative:d};if(null===a)return m;n.nextTick(function(){a(null,m)})}}).call(this,t(43))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.demoWordFrequencies=[["value",14],["accounts",12],["network",9],["blockchain",8],["problem",8],["create",8],["account",7],["fake",6],["economic",6],["currency",6],["bob",6],["example",6],["system",6],["people",6],["creating",6],["hard",5],["think",5],["years",5],["bitcoin",4],["things",4],["reward",4],["user",4],["existing",4],["dlive",4],["bet",4],["bets",4],["users",4],["asics",4],["around",4],["replace",4],["financial",4],["products",4],["expensive",4],["sums",3],["agree",3],["enough",3],["grow",3],["technology",3],["existence",3],["work",3],["sarah",3],["grows",3],["really",3],["mining",3],["started",3],["transactions",3],["hope",3],["built",3],["bot",3],["pretty",3],["someone",3],["cryptocurrencies",3],["excited",3],["machines",3],["give",3],["tried",3],["small",3],["bots",3],["potential",3],["start",3],["feel",3],["means",3],["thought",3],["course",3],["confidence",3],["win",3],["store",3],["changes",3],["cash",3],["flow",3],["traditional",3],["step",3],["market",3],["cost",3],["listen",3],["post",2],["replaces",2],["crypto",2],["higher",2],["cap",2],["derivatives",2],["smaller",2],["current",2],["reason",2],["making",2],["discounted",2],["companies",2],["facebook",2],["far",2],["read",2],["hoping",2],["various",2],["smart",2],["contract",2],["quickly",2],["bank",2],["issue",2],["sense",2],["buy",2],["couple",2]]},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.ignoredWords="\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    0\n    january\n    february\n    march\n    april\n    may\n    june\n    july\n    august\n    september\n    october\n    november\n    december\n    monday\n    tuesday\n    wednesday\n    thursday\n    friday\n    saturday\n    a\n    b\n    c\n    d\n    e\n    f\n    g\n    h\n    i\n    j\n    k\n    l\n    m\n    n\n    o\n    p\n    q\n    r\n    s\n    t\n    u\n    v\n    w\n    x\n    y\n    z\n    -\n    --\n    ''\n    we've\n    we'll\n    we're\n    who'll\n    who've\n    who's\n    you'll\n    you've\n    you're\n    i'll\n    i've\n    i'm\n    i'd\n    he'll\n    he'd\n    he's\n    she'll\n    she'd\n    she's\n    it'll\n    it'd\n    it's\n    they've\n    they're\n    they'll\n    didn't\n    don't\n    can't\n    won't\n    isn't\n    wasn't\n    couldn't\n    should't\n    wouldn't\n    ve\n    ll\n    re\n    th\n    rd\n    st\n    doing\n    allow\n    examining\n    using\n    during\n    within\n    across\n    among\n    whether\n    especially\n    without\n    actually\n    another\n    am\n    because\n    cannot\n    the\n    of\n    to\n    and\n    a\n    in\n    is\n    it\n    you\n    that\n    he\n    was\n    for\n    on\n    are\n    with\n    as\n    I\n    his\n    they\n    be\n    at\n    one\n    have\n    this\n    from\n    or\n    had\n    by\n    hot\n    word\n    but\n    what\n    some\n    we\n    yet\n    can\n    out\n    other\n    were\n    all\n    there\n    when\n    up\n    use\n    your\n    how\n    said\n    an\n    each\n    she\n    which\n    do\n    their\n    time\n    if\n    will\n    shall\n    way\n    about\n    many\n    then\n    them\n    would\n    like\n    so\n    these\n    her\n    long\n    make\n    thing\n    see\n    him\n    two\n    has\n    look\n    more\n    day\n    could\n    go\n    come\n    did\n    no\n    yes\n    most\n    my\n    over\n    know\n    than\n    call\n    first\n    who\n    may\n    down\n    side\n    been\n    now\n    find\n    any\n    new\n    part\n    take\n    get\n    place\n    made\n    where\n    after\n    back\n    little\n    only\n    came\n    show\n    every\n    good\n    me\n    our\n    under\n    upon\n    very\n    through\n    just\n    great\n    say\n    low\n    cause\n    much\n    mean\n    before\n    move\n    right\n    too\n    same\n    tell\n    does\n    set\n    three\n    want\n    well\n    also\n    put\n    here\n    must\n    big\n    high\n    such\n    why\n    ask\n    men\n    went\n    kind\n    need\n    try\n    again\n    near\n    should\n    still\n    between\n    never\n    last\n    let\n    though\n    might\n    saw\n    left\n    late\n    run\n    don't\n    while\n    close\n    few\n    seem\n    next\n    got\n    always\n    those\n    both\n    often\n    thus\n    won't\n    not\n    into\n    inside\n    its\n    makes\n    tenth\n    trying\n    i\n    me\n    my\n    myself\n    we\n    us\n    our\n    ours\n    ourselves\n    you\n    your\n    yours\n    yourself\n    yourselves\n    he\n    him\n    his\n    himself\n    she\n    her\n    hers\n    herself\n    it\n    its\n    itself\n    they\n    them\n    their\n    theirs\n    themselves\n    what\n    which\n    who\n    whom\n    this\n    that\n    these\n    those\n    am\n    is\n    are\n    was\n    were\n    be\n    been\n    being\n    have\n    has\n    had\n    having\n    do\n    does\n    did\n    doing\n    will\n    would\n    shall\n    should\n    can\n    could\n    may\n    might\n    must\n    ought\n    i'm\n    you're\n    he's\n    she's\n    it's\n    we're\n    they're\n    i've\n    you've\n    we've\n    they've\n    i'd\n    you'd\n    he'd\n    she'd\n    we'd\n    they'd\n    i'll\n    you'll\n    he'll\n    she'll\n    we'll\n    they'll\n    isn't\n    aren't\n    wasn't\n    weren't\n    hasn't\n    haven't\n    hadn't\n    doesn't\n    don't\n    didn't\n    won't\n    wouldn't\n    shan't\n    shouldn't\n    can't\n    cannot\n    couldn't\n    mustn't\n    let's\n    that's\n    who's\n    what's\n    here's\n    there's\n    when's\n    where's\n    why's\n    how's\n    daren't\n    needn't\n    oughtn't\n    mightn't\n    a\n    an\n    the\n    and\n    but\n    if\n    or\n    because\n    as\n    until\n    while\n    of\n    at\n    by\n    for\n    with\n    about\n    against\n    between\n    into\n    through\n    during\n    before\n    after\n    above\n    below\n    to\n    from\n    up\n    down\n    in\n    out\n    on\n    off\n    over\n    under\n    again\n    further\n    then\n    once\n    here\n    there\n    when\n    where\n    why\n    how\n    all\n    any\n    both\n    each\n    few\n    more\n    most\n    other\n    some\n    such\n    no\n    nor\n    not\n    only\n    own\n    same\n    so\n    than\n    too\n    very\n    one\n    every\n    least\n    less\n    many\n    now\n    ever\n    never\n    say\n    says\n    said\n    also\n    get\n    go\n    goes\n    just\n    made\n    make\n    put\n    see\n    seen\n    whether\n    like\n    well\n    back\n    even\n    still\n    way\n    take\n    since\n    another\n    however\n    two\n    three\n    four\n    five\n    first\n    second\n    new\n    old\n    high\n    long".split(/[ ,.\n]+/)},function(e,n){e.exports=Chart},function(e,n,t){"use strict";var i,r,s,a,o,l;window.setImmediate||(window.setImmediate=window.msSetImmediate||window.webkitSetImmediate||window.mozSetImmediate||window.oSetImmediate||function(){if(!window.postMessage||!window.addEventListener)return null;var e=[void 0],n="zero-timeout-message";return window.addEventListener("message",function(t){if("string"==typeof t.data&&t.data.substr(0,n.length)===n){t.stopImmediatePropagation();var i=parseInt(t.data.substr(n.length),36);e[i]&&(e[i](),e[i]=void 0)}},!0),window.clearImmediate=function(n){e[n]&&(e[n]=void 0)},function(t){var i=e.length;return e.push(t),window.postMessage(n+i.toString(36),"*"),i}}()||function(e){window.setTimeout(e,0)}),window.clearImmediate||(window.clearImmediate=window.msClearImmediate||window.webkitClearImmediate||window.mozClearImmediate||window.oClearImmediate||function(e){window.clearTimeout(e)}),r=this,s=function(){var e=document.createElement("canvas");if(!e||!e.getContext)return!1;var n=e.getContext("2d");return!!n&&(!!n.getImageData&&(!!n.fillText&&(!!Array.prototype.some&&!!Array.prototype.push)))}(),a=function(){if(s){for(var e,n,t=document.createElement("canvas").getContext("2d"),i=20;i;){if(t.font=i.toString(10)+"px sans-serif",t.measureText("Ｗ").width===e&&t.measureText("m").width===n)return i+1;e=t.measureText("Ｗ").width,n=t.measureText("m").width,i--}return 0}}(),o=function(e){for(var n,t,i=e.length;i;n=Math.floor(Math.random()*i),t=e[--i],e[i]=e[n],e[n]=t);return e},(l=function(e,n){if(s){Array.isArray(e)||(e=[e]),e.forEach(function(n,t){if("string"==typeof n){if(e[t]=document.getElementById(n),!e[t])throw"The element id specified is not found."}else if(!n.tagName&&!n.appendChild)throw"You must pass valid HTML elements, or ID of the element."});var t={list:[],fontFamily:'"Trebuchet MS", "Heiti TC", "微軟正黑體", "Arial Unicode MS", "Droid Fallback Sans", sans-serif',fontWeight:"normal",color:"random-dark",minSize:0,weightFactor:1,clearCanvas:!0,backgroundColor:"#fff",gridSize:8,drawOutOfBound:!1,origin:null,drawMask:!1,maskColor:"rgba(255,0,0,0.3)",maskGapWidth:.3,wait:0,abortThreshold:0,abort:function(){},minRotation:-Math.PI/2,maxRotation:Math.PI/2,rotationSteps:0,shuffle:!0,rotateRatio:.1,shape:"circle",ellipticity:.65,classes:null,hover:null,click:null};if(n)for(var i in n)i in t&&(t[i]=n[i]);if("function"!=typeof t.weightFactor){var r=t.weightFactor;t.weightFactor=function(e){return e*r}}if("function"!=typeof t.shape)switch(t.shape){case"circle":default:t.shape="circle";break;case"cardioid":t.shape=function(e){return 1-Math.sin(e)};break;case"diamond":t.shape=function(e){var n=e%(2*Math.PI/4);return 1/(Math.cos(n)+Math.sin(n))};break;case"square":t.shape=function(e){return Math.min(1/Math.abs(Math.cos(e)),1/Math.abs(Math.sin(e)))};break;case"triangle-forward":t.shape=function(e){var n=e%(2*Math.PI/3);return 1/(Math.cos(n)+Math.sqrt(3)*Math.sin(n))};break;case"triangle":case"triangle-upright":t.shape=function(e){var n=(e+3*Math.PI/2)%(2*Math.PI/3);return 1/(Math.cos(n)+Math.sqrt(3)*Math.sin(n))};break;case"pentagon":t.shape=function(e){var n=(e+.955)%(2*Math.PI/5);return 1/(Math.cos(n)+.726543*Math.sin(n))};break;case"star":t.shape=function(e){var n=(e+.955)%(2*Math.PI/10);return(e+.955)%(2*Math.PI/5)-2*Math.PI/10>=0?1/(Math.cos(2*Math.PI/10-n)+3.07768*Math.sin(2*Math.PI/10-n)):1/(Math.cos(n)+3.07768*Math.sin(n))}}t.gridSize=Math.max(Math.floor(t.gridSize),4);var l,u,c,d,f,p,g,h,m=t.gridSize,v=m-t.maskGapWidth,y=Math.abs(t.maxRotation-t.minRotation),b=Math.abs(Math.floor(t.rotationSteps)),w=Math.min(t.maxRotation,t.minRotation);switch(t.color){case"random-dark":g=function(){return P(10,50)};break;case"random-light":g=function(){return P(50,90)};break;default:"function"==typeof t.color&&(g=t.color)}"function"==typeof t.fontWeight&&(h=t.fontWeight);var k=null;"function"==typeof t.classes&&(k=t.classes);var x,M=!1,j=[],z=function(e){var n,t,i=e.currentTarget,r=i.getBoundingClientRect();e.touches?(n=e.touches[0].clientX,t=e.touches[0].clientY):(n=e.clientX,t=e.clientY);var s=n-r.left,a=t-r.top,o=Math.floor(s*(i.width/r.width||1)/m),l=Math.floor(a*(i.height/r.height||1)/m);return j[o][l]},_=function(e){var n=z(e);x!==n&&(x=n,n?t.hover(n.item,n.dimension,e):t.hover(void 0,void 0,e))},S=function(e){var n=z(e);n&&(t.click(n.item,n.dimension,e),e.preventDefault())},T=[],E=function(e){if(T[e])return T[e];var n=8*e,i=n,r=[];for(0===e&&r.push([d[0],d[1],0]);i--;){var s=1;"circle"!==t.shape&&(s=t.shape(i/n*2*Math.PI)),r.push([d[0]+e*s*Math.cos(-i/n*2*Math.PI),d[1]+e*s*Math.sin(-i/n*2*Math.PI)*t.ellipticity,i/n*2*Math.PI])}return T[e]=r,r},O=function(){return t.abortThreshold>0&&(new Date).getTime()-p>t.abortThreshold},C=function(n,t,i,r,s){if(!(n>=u||t>=c||n<0||t<0)){if(l[n][t]=!1,i)e[0].getContext("2d").fillRect(n*m,t*m,v,v);M&&(j[n][t]={item:s,dimension:r})}},I=function(n){var i,r,s;Array.isArray(n)?(i=n[0],r=n[1]):(i=n.word,r=n.weight,s=n.attributes);var d=0===t.rotateRatio?0:Math.random()>t.rotateRatio?0:0===y?w:b>0?w+Math.floor(Math.random()*b)*y/(b-1):w+Math.random()*y,p=function(e,n,i){var r=t.weightFactor(n);if(r<=t.minSize)return!1;var s,o=1;r<a&&(o=function(){for(var e=2;e*r<a;)e+=2;return e}()),s=h?h(e,n,r):t.fontWeight;var l=document.createElement("canvas"),u=l.getContext("2d",{willReadFrequently:!0});u.font=s+" "+(r*o).toString(10)+"px "+t.fontFamily;var c=u.measureText(e).width/o,d=Math.max(r*o,u.measureText("m").width,u.measureText("Ｗ").width)/o,f=c+2*d,p=3*d,g=Math.ceil(f/m),v=Math.ceil(p/m);f=g*m,p=v*m;var y=-c/2,b=.4*-d,w=Math.ceil((f*Math.abs(Math.sin(i))+p*Math.abs(Math.cos(i)))/m),k=Math.ceil((f*Math.abs(Math.cos(i))+p*Math.abs(Math.sin(i)))/m),x=k*m,M=w*m;l.setAttribute("width",x),l.setAttribute("height",M),u.scale(1/o,1/o),u.translate(x*o/2,M*o/2),u.rotate(-i),u.font=s+" "+(r*o).toString(10)+"px "+t.fontFamily,u.fillStyle="#000",u.textBaseline="middle",u.fillText(e,y*o,(b+.5*r)*o);var j=u.getImageData(0,0,x,M).data;if(O())return!1;for(var z,_,S,T=[],E=k,C=[w/2,k/2,w/2,k/2];E--;)for(z=w;z--;){S=m;e:for(;S--;)for(_=m;_--;)if(j[4*((z*m+S)*x+(E*m+_))+3]){T.push([E,z]),E<C[3]&&(C[3]=E),E>C[1]&&(C[1]=E),z<C[0]&&(C[0]=z),z>C[2]&&(C[2]=z);break e}}return{mu:o,occupied:T,bounds:C,gw:k,gh:w,fillTextOffsetX:y,fillTextOffsetY:b,fillTextWidth:c,fillTextHeight:d,fontSize:r}}(i,r,d);if(!p)return!1;if(O())return!1;if(!t.drawOutOfBound){var v=p.bounds;if(v[1]-v[3]+1>u||v[2]-v[0]+1>c)return!1}for(var x=f+1,j=function(a){var o=Math.floor(a[0]-p.gw/2),v=Math.floor(a[1]-p.gh/2);p.gw,p.gh;return!!function(e,n,i,r,s){for(var a=s.length;a--;){var o=e+s[a][0],d=n+s[a][1];if(o>=u||d>=c||o<0||d<0){if(!t.drawOutOfBound)return!1}else if(!l[o][d])return!1}return!0}(o,v,0,0,p.occupied)&&(function(n,i,r,s,a,o,l,u,c){var d,f,p,v=r.fontSize;d=g?g(s,a,v,o,l):t.color,f=h?h(s,a,v):t.fontWeight,p=k?k(s,a,v):t.classes;var y=r.bounds;y[3],y[0],y[1],y[3],y[2],y[0],e.forEach(function(e){if(e.getContext){var a=e.getContext("2d"),o=r.mu;a.save(),a.scale(1/o,1/o),a.font=f+" "+(v*o).toString(10)+"px "+t.fontFamily,a.fillStyle=d,a.translate((n+r.gw/2)*m*o,(i+r.gh/2)*m*o),0!==u&&a.rotate(-u),a.textBaseline="middle",a.fillText(s,r.fillTextOffsetX*o,(r.fillTextOffsetY+.5*v)*o),a.restore()}else{var l=document.createElement("span"),g="";g="rotate("+-u/Math.PI*180+"deg) ",1!==r.mu&&(g+="translateX(-"+r.fillTextWidth/4+"px) scale("+1/r.mu+")");var h={position:"absolute",display:"block",font:f+" "+v*r.mu+"px "+t.fontFamily,left:(n+r.gw/2)*m+r.fillTextOffsetX+"px",top:(i+r.gh/2)*m+r.fillTextOffsetY+"px",width:r.fillTextWidth+"px",height:r.fillTextHeight+"px",lineHeight:v+"px",whiteSpace:"nowrap",transform:g,webkitTransform:g,msTransform:g,transformOrigin:"50% 40%",webkitTransformOrigin:"50% 40%",msTransformOrigin:"50% 40%"};for(var y in d&&(h.color=d),l.textContent=s,h)l.style[y]=h[y];if(c)for(var b in c)l.setAttribute(b,c[b]);p&&(l.className+=p),e.appendChild(l)}})}(o,v,p,i,r,f-x,a[2],d,s),function(n,i,r,s,a,o){var l,d,f=a.occupied,p=t.drawMask;if(p&&((l=e[0].getContext("2d")).save(),l.fillStyle=t.maskColor),M){var g=a.bounds;d={x:(n+g[3])*m,y:(i+g[0])*m,w:(g[1]-g[3]+1)*m,h:(g[2]-g[0]+1)*m}}for(var h=f.length;h--;){var v=n+f[h][0],y=i+f[h][1];v>=u||y>=c||v<0||y<0||C(v,y,p,d,o)}p&&l.restore()}(o,v,0,0,p,n),!0)};x--;){var z=E(f-x);if(t.shuffle&&(z=[].concat(z),o(z)),z.some(j))return!0}return!1},L=function(n,t,i){if(t)return!e.some(function(e){var r=document.createEvent("CustomEvent");return r.initCustomEvent(n,!0,t,i||{}),!e.dispatchEvent(r)},this);e.forEach(function(e){var r=document.createEvent("CustomEvent");r.initCustomEvent(n,!0,t,i||{}),e.dispatchEvent(r)},this)};!function(){var n=e[0];if(n.getContext)u=Math.ceil(n.width/m),c=Math.ceil(n.height/m);else{var i=n.getBoundingClientRect();u=Math.ceil(i.width/m),c=Math.ceil(i.height/m)}if(L("wordcloudstart",!0)){var r,s,a,o,g;if(d=t.origin?[t.origin[0]/m,t.origin[1]/m]:[u/2,c/2],f=Math.floor(Math.sqrt(u*u+c*c)),l=[],!n.getContext||t.clearCanvas)for(e.forEach(function(e){if(e.getContext){var n=e.getContext("2d");n.fillStyle=t.backgroundColor,n.clearRect(0,0,u*(m+1),c*(m+1)),n.fillRect(0,0,u*(m+1),c*(m+1))}else e.textContent="",e.style.backgroundColor=t.backgroundColor,e.style.position="relative"}),r=u;r--;)for(l[r]=[],s=c;s--;)l[r][s]=!0;else{var h=document.createElement("canvas").getContext("2d");h.fillStyle=t.backgroundColor,h.fillRect(0,0,1,1);var v,y,b=h.getImageData(0,0,1,1).data,w=n.getContext("2d").getImageData(0,0,u*m,c*m).data;for(r=u;r--;)for(l[r]=[],s=c;s--;){y=m;e:for(;y--;)for(v=m;v--;)for(a=4;a--;)if(w[4*((s*m+y)*u*m+(r*m+v))+a]!==b[a]){l[r][s]=!1;break e}!1!==l[r][s]&&(l[r][s]=!0)}w=h=b=void 0}if(t.hover||t.click){for(M=!0,r=u+1;r--;)j[r]=[];t.hover&&n.addEventListener("mousemove",_);var k=function(e){e.preventDefault()};t.click&&(n.addEventListener("click",S),n.addEventListener("touchstart",S),n.addEventListener("touchend",k),n.style.webkitTapHighlightColor="rgba(0, 0, 0, 0)"),n.addEventListener("wordcloudstart",function e(){n.removeEventListener("wordcloudstart",e),n.removeEventListener("mousemove",_),n.removeEventListener("click",S),n.removeEventListener("touchstart",S),n.removeEventListener("touchend",k),x=void 0})}a=0,0!==t.wait?(o=window.setTimeout,g=window.clearTimeout):(o=window.setImmediate,g=window.clearImmediate);var z=function(n,t){e.forEach(function(e){e.removeEventListener(n,t)},this)},T=function e(){z("wordcloudstart",e),g(E)};!function(n,t){e.forEach(function(e){e.addEventListener(n,t)},this)}("wordcloudstart",T);var E=o(function e(){if(a>=t.list.length)return g(E),L("wordcloudstop",!1),void z("wordcloudstart",T);p=(new Date).getTime();var n=I(t.list[a]),i=!L("wordclouddrawn",!0,{item:t.list[a],drawn:n});if(O()||i)return g(E),t.abort(),L("wordcloudabort",!1),L("wordcloudstop",!1),void z("wordcloudstart",T);a++,E=o(e,t.wait)},t.wait)}}()}function P(e,n){return"hsl("+(360*Math.random()).toFixed()+","+(30*Math.random()+70).toFixed()+"%,"+(Math.random()*(n-e)+e).toFixed()+"%)"}}).isSupported=s,l.minFontSize=a,r.WordCloud=l,void 0===(i=function(){return l}.apply(n,[]))||(e.exports=i)},function(e,n){e.exports=steem},function(e,n,t){"use strict";var i=t(9),r=t(36),s=t(11),a=t(13);e.exports=function(e){i(i.S,e,{from:function(e){var n,t,i,o,l=arguments[1];return r(this),(n=void 0!==l)&&r(l),void 0==e?new this:(t=[],n?(i=0,o=s(l,arguments[2],2),a(e,!1,function(e){t.push(o(e,i++))})):a(e,!1,t.push,t),new this(t))}})}},function(e,n,t){t(50)("Set")},function(e,n,t){"use strict";var i=t(9);e.exports=function(e){i(i.S,e,{of:function(){for(var e=arguments.length,n=new Array(e);e--;)n[e]=arguments[e];return new this(n)}})}},function(e,n,t){t(52)("Set")},function(e,n,t){var i=t(13);e.exports=function(e,n){var t=[];return i(e,!1,t.push,t,n),t}},function(e,n,t){var i=t(14),r=t(54);e.exports=function(e){return function(){if(i(this)!=e)throw TypeError(e+"#toJSON isn't generic");return r(this)}}},function(e,n,t){var i=t(9);i(i.P+i.R,"Set",{toJSON:t(55)("Set")})},function(e,n,t){var i=t(23);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,n,t){var i=t(4),r=t(57),s=t(0)("species");e.exports=function(e){var n;return r(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!r(n.prototype)||(n=void 0),i(n)&&null===(n=n[s])&&(n=void 0)),void 0===n?Array:n}},function(e,n,t){var i=t(58);e.exports=function(e,n){return new(i(e))(n)}},function(e,n,t){var i=t(11),r=t(39),s=t(26),a=t(22),o=t(59);e.exports=function(e,n){var t=1==e,l=2==e,u=3==e,c=4==e,d=6==e,f=5==e||d,p=n||o;return function(n,o,g){for(var h,m,v=s(n),y=r(v),b=i(o,g,3),w=a(y.length),k=0,x=t?p(n,w):l?p(n,0):void 0;w>k;k++)if((f||k in y)&&(m=b(h=y[k],k,v),e))if(t)x[k]=m;else if(m)switch(e){case 3:return!0;case 5:return h;case 6:return k;case 2:x.push(h)}else if(c)return!1;return d?-1:u||c?c:x}}},function(e,n,t){"use strict";var i=t(2),r=t(9),s=t(28),a=t(10),o=t(6),l=t(30),u=t(13),c=t(29),d=t(4),f=t(16),p=t(5).f,g=t(60)(0),h=t(3);e.exports=function(e,n,t,m,v,y){var b=i[e],w=b,k=v?"set":"add",x=w&&w.prototype,M={};return h&&"function"==typeof w&&(y||x.forEach&&!a(function(){(new w).entries().next()}))?(w=n(function(n,t){c(n,w,e,"_c"),n._c=new b,void 0!=t&&u(t,v,n[k],n)}),g("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","),function(e){var n="add"==e||"set"==e;e in x&&(!y||"clear"!=e)&&o(w.prototype,e,function(t,i){if(c(this,w,e),!n&&y&&!d(t))return"get"==e&&void 0;var r=this._c[e](0===t?0:t,i);return n?this:r})}),y||p(w.prototype,"size",{get:function(){return this._c.size}})):(w=m.getConstructor(n,e,v,k),l(w.prototype,t),s.NEED=!0),f(w,e),M[e]=w,r(r.G+r.W+r.F,M),y||m.setStrong(w,e,v),w}},function(e,n,t){"use strict";var i=t(2),r=t(1),s=t(5),a=t(3),o=t(0)("species");e.exports=function(e){var n="function"==typeof r[e]?r[e]:i[e];a&&n&&!n[o]&&s.f(n,o,{configurable:!0,get:function(){return this}})}},function(e,n,t){var i=t(7),r=t(0)("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||s[r]===e)}},function(e,n,t){var i=t(8);e.exports=function(e,n,t,r){try{return r?n(i(t)[0],t[1]):n(t)}catch(n){var s=e.return;throw void 0!==s&&i(s.call(e)),n}}},function(e,n,t){"use strict";var i=t(5).f,r=t(32),s=t(30),a=t(11),o=t(29),l=t(13),u=t(17),c=t(33),d=t(62),f=t(3),p=t(28).fastKey,g=t(27),h=f?"_s":"size",m=function(e,n){var t,i=p(n);if("F"!==i)return e._i[i];for(t=e._f;t;t=t.n)if(t.k==n)return t};e.exports={getConstructor:function(e,n,t,u){var c=e(function(e,i){o(e,c,n,"_i"),e._t=n,e._i=r(null),e._f=void 0,e._l=void 0,e[h]=0,void 0!=i&&l(i,t,e[u],e)});return s(c.prototype,{clear:function(){for(var e=g(this,n),t=e._i,i=e._f;i;i=i.n)i.r=!0,i.p&&(i.p=i.p.n=void 0),delete t[i.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var t=g(this,n),i=m(t,e);if(i){var r=i.n,s=i.p;delete t._i[i.i],i.r=!0,s&&(s.n=r),r&&(r.p=s),t._f==i&&(t._f=r),t._l==i&&(t._l=s),t[h]--}return!!i},forEach:function(e){g(this,n);for(var t,i=a(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.n:this._f;)for(i(t.v,t.k,this);t&&t.r;)t=t.p},has:function(e){return!!m(g(this,n),e)}}),f&&i(c.prototype,"size",{get:function(){return g(this,n)[h]}}),c},def:function(e,n,t){var i,r,s=m(e,n);return s?s.v=t:(e._l=s={i:r=p(n,!0),k:n,v:t,p:i=e._l,n:void 0,r:!1},e._f||(e._f=s),i&&(i.n=s),e[h]++,"F"!==r&&(e._i[r]=s)),e},getEntry:m,setStrong:function(e,n,t){u(e,n,function(e,t){this._t=g(e,n),this._k=t,this._l=void 0},function(){for(var e=this._k,n=this._l;n&&n.r;)n=n.p;return this._t&&(this._l=n=n?n.n:this._t._f)?c(0,"keys"==e?n.k:"values"==e?n.v:[n.k,n.v]):(this._t=void 0,c(1))},t?"entries":"values",!t,!0),d(n)}}},function(e,n,t){"use strict";var i=t(65),r=t(27);e.exports=t(61)("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return i.def(r(this,"Set"),e=0===e?0:e,e)}},i)},function(e,n){},function(e,n,t){t(67),t(15),t(18),t(66),t(56),t(53),t(51),e.exports=t(1).Set},function(e,n,t){e.exports={default:t(68),__esModule:!0}},function(e,n,t){var i=t(8),r=t(31);e.exports=t(1).getIterator=function(e){var n=r(e);if("function"!=typeof n)throw TypeError(e+" is not iterable!");return i(n.call(e))}},function(e,n,t){t(18),t(15),e.exports=t(70)},function(e,n,t){e.exports={default:t(71),__esModule:!0}},function(e,n,t){var i=t(14),r=t(0)("iterator"),s=t(7);e.exports=t(1).isIterable=function(e){var n=Object(e);return void 0!==n[r]||"@@iterator"in n||s.hasOwnProperty(i(n))}},function(e,n,t){var i=t(21),r=t(25);e.exports=function(e){return function(n,t){var s,a,o=String(r(n)),l=i(t),u=o.length;return l<0||l>=u?e?"":void 0:(s=o.charCodeAt(l))<55296||s>56319||l+1===u||(a=o.charCodeAt(l+1))<56320||a>57343?e?o.charAt(l):s:e?o.slice(l,l+2):a-56320+(s-55296<<10)+65536}}},function(e,n,t){var i=t(12),r=t(26),s=t(20)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),i(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,n,t){var i=t(2).document;e.exports=i&&i.documentElement},function(e,n,t){var i=t(5),r=t(8),s=t(40);e.exports=t(3)?Object.defineProperties:function(e,n){r(e);for(var t,a=s(n),o=a.length,l=0;o>l;)i.f(e,t=a[l++],n[t]);return e}},function(e,n,t){"use strict";var i=t(32),r=t(34),s=t(16),a={};t(6)(a,t(0)("iterator"),function(){return this}),e.exports=function(e,n,t){e.prototype=i(a,{next:r(1,t)}),s(e,n+" Iterator")}},function(e,n,t){e.exports=t(6)},function(e,n){e.exports=!0},function(e,n){e.exports=function(){}},function(e,n,t){"use strict";var i=t(81),r=t(33),s=t(7),a=t(24);e.exports=t(17)(Array,"Array",function(e,n){this._t=a(e),this._i=0,this._k=n},function(){var e=this._t,n=this._k,t=this._i++;return!e||t>=e.length?(this._t=void 0,r(1)):r(0,"keys"==n?t:"values"==n?e[t]:[t,e[t]])},"values"),s.Arguments=s.Array,i("keys"),i("values"),i("entries")},function(e,n,t){t(18),t(15),e.exports=t(73)},function(e,n,t){e.exports={default:t(83),__esModule:!0}},function(e,n,t){"use strict";n.__esModule=!0;var i=s(t(84)),r=s(t(72));function s(e){return e&&e.__esModule?e:{default:e}}n.default=function(){return function(e,n){if(Array.isArray(e))return e;if((0,i.default)(Object(e)))return function(e,n){var t=[],i=!0,s=!1,a=void 0;try{for(var o,l=(0,r.default)(e);!(i=(o=l.next()).done)&&(t.push(o.value),!n||t.length!==n);i=!0);}catch(e){s=!0,a=e}finally{try{!i&&l.return&&l.return()}finally{if(s)throw a}}return t}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()},function(e,n,t){var i=t(4);e.exports=function(e,n){if(!i(e))return e;var t,r;if(n&&"function"==typeof(t=e.toString)&&!i(r=t.call(e)))return r;if("function"==typeof(t=e.valueOf)&&!i(r=t.call(e)))return r;if(!n&&"function"==typeof(t=e.toString)&&!i(r=t.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,n,t){e.exports=!t(3)&&!t(10)(function(){return 7!=Object.defineProperty(t(35)("div"),"a",{get:function(){return 7}}).a})},function(e,n,t){var i=t(9),r=t(1),s=t(10);e.exports=function(e,n){var t=(r.Object||{})[e]||Object[e],a={};a[e]=n(t),i(i.S+i.F*s(function(){t(1)}),"Object",a)}},function(e,n,t){var i=t(21),r=Math.max,s=Math.min;e.exports=function(e,n){return(e=i(e))<0?r(e+n,0):s(e,n)}},function(e,n,t){var i=t(24),r=t(22),s=t(89);e.exports=function(e){return function(n,t,a){var o,l=i(n),u=r(l.length),c=s(a,u);if(e&&t!=t){for(;u>c;)if((o=l[c++])!=o)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===t)return e||c||0;return!e&&-1}}},function(e,n,t){var i=t(12),r=t(24),s=t(90)(!1),a=t(20)("IE_PROTO");e.exports=function(e,n){var t,o=r(e),l=0,u=[];for(t in o)t!=a&&i(o,t)&&u.push(t);for(;n.length>l;)i(o,t=n[l++])&&(~s(u,t)||u.push(t));return u}},function(e,n,t){var i=t(26),r=t(40);t(88)("keys",function(){return function(e){return r(i(e))}})},function(e,n,t){t(92),e.exports=t(1).Object.keys},function(e,n,t){e.exports={default:t(93),__esModule:!0}},function(e,n,t){"use strict";var i=d(t(94)),r=d(t(85)),s=d(t(69)),a=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}(t(49)),o=d(t(48)),l=d(t(47)),u=t(46),c=t(45);function d(e){return e&&e.__esModule?e:{default:e}}var f=t(44);var p=function(e){var n=e.map(function(e){return f(e).comparative}),t=Array.apply(null,Array(200)).map(Number.prototype.valueOf,0);n.forEach(function(e){var n=Math.min(200,Math.max(0,Math.round(20*(e+5))));t[n]++});var i=document.getElementById("sentiment-canvas").getContext("2d"),r=[],s=[];Array.apply(null,Array(200)).map(Number.prototype.valueOf,0).map(function(e,n){var t=Math.max(1,200/Math.max(1,Math.abs(n-100)));n-100==0?r.push("rgba(0, 0, 255, 1"):n<=99?r.push("rgba(255, 0, 0, "+t):r.push("rgba(0, 255, 0, "+t),s.push(function(e,n){var t=Math.pow(10,n);return Math.round(e*t)/t}(n/20-5,2))});var a=new l.default(i,{type:"bar",data:{labels:s,datasets:[{label:"Sentiment Analysis of Posts",data:t,backgroundColor:r}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0},scaleLabel:{display:!0,labelString:"Number of posts and comments"}}],xAxes:[{scaleLabel:{display:!0,labelString:"Positivity"}}]}}});console.log(a)},g=function(e){var n={};return e.split(/[ ,.\n]+/).forEach(function(e){var t=e.toLowerCase();/\W/g.test(t)||(n[t]?n[t]++:n[t]=1)}),n};$(document).ready(function(){$(".submit-button").click(function(){var e=$(".username-input").val()||"egmracer01";a.api.getAccountHistory(e,-1,1e4,function(n,t){console.log(n,(t||[]).length),t&&function(e,n){var t=new s.default,a=[];n.forEach(function(n){var i=(0,r.default)(n,2),s=(i[0],i[1].op),o=(0,r.default)(s,2),l=o[0],u=o[1];"comment"===l&&u.author===e&&(t.has(u.permlink)||(t.add(u.permlink),a.push(u.body)))}),p(a);var l=g(a.join(" ")),c=(0,i.default)(l);c.sort(function(e,n){return l[n]-l[e]});var d=[],f=null;c.forEach(function(e,n){-1===u.ignoredWords.indexOf(e)&&(f||(f=14/l[e]),d.length<100&&d.push([e,Math.max(1,f*l[e])]))}),(0,o.default)(document.getElementById("word-cloud-canvas"),{list:d,minSize:4,drawOutOfBound:!0,weightFactor:5.5})}(e,t)})}),setTimeout(function(){$(".submit-button").click()},1e3);var e=document.getElementById("word-cloud-canvas");e.height=.75*window.innerHeight,e.width=.6666*window.innerWidth;var n=document.getElementById("sentiment-canvas");n.height=.75*window.innerHeight,n.width=.6666*window.innerWidth,(0,o.default)(document.getElementById("word-cloud-canvas"),{list:c.demoWordFrequencies,minSize:4,drawOutOfBound:!0,weightFactor:5.5})})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,